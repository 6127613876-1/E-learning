[
    {
        "video_id": "QaU6gEtOwyE",
        "title": "Roadmap to Web Development | for Students",
        "url": "https://www.youtube.com/watch?v=QaU6gEtOwyE",
        "duration": 59,
        "transcript": "Do you want to build websites like Amazon Netflix Flipkart and more to build websites we need to learn the art of web development and to learn web development there are two steps first is learning front-end development second is learning backend development now frontend of a website is the part that the user interacts with and to learn front-end development there are three core technologies that we need to learn about first is HTML second is CSS third is Javascript and once we are done with front-end then we move on to backend development if you're a beginner I strongly advise you to either start with nodejs which is built up on JavaScript for backend development or you can start with Django which which is built on Python programming language and while we are doing backend development we also need to specialize in at least one of the databases we can either choose a SQL database or we can choose a non-sql database like mongodb but as technology is ever evolving just learning the core Basics is not enough we also need to do some specialization based upon our interest if we are interested more inclined towards front end development then we can learn a framework like reactjs or angularjs and do our specialization there or we can learn more about backend development and become a backend developer that was it for today all the best for your future journey and see you next time"
    },
    {
        "video_id": "ysEN5RaKOlA",
        "title": "Learn web development as an absolute beginner",
        "url": "https://www.youtube.com/watch?v=ysEN5RaKOlA",
        "duration": 777,
        "transcript": "If you want to learn web development, where \ndo you even start? It's hard to find the right   advice without suffering from information overload.\nThat's why I've created this beginner's roadmap!   it lays out all the basics you need to learn \nweb development we're going to go through each   step so by the end of this guide you'll have an \nunderstanding of the basics of web development and   what skills you need to learn I recommend doing \nsteps 1 2 & 3 in order then depending on whether   you want to focus on more front-end or back-end \nyou can do steps 4A or 4B. I personally think   it's a good idea for front-end web developers to \nlearn at least a little bit of back-end and vice   versa knowing the basics of both will help \nyou know if you like front-end or back-end   web development better sound good let's dig deeper \ninto the roadmap before you get into actual coding   you'll need to understand some general concepts \nas you start your journey into web development how   websites work the difference between front-end and \nback-end and using a code editor all websites at   the most basic are just a bunch of files that are \nstored on a computer called a server this server   is connected to the Internet you can then load \nthat website through a browser like Chrome Firefox   or Safari on your computer or on your phone \nyour browser is also called the client in this   situation so every time you're on the Internet \nyou the client are loading data from the server   as well as submitting data back to the server this \nback and forth between the client and the server   is the basis of the internet web developer roles \ntypically fall into three categories front end   back end and full stack the terms front end back \nend and full stack web developer describe what   part of the client-server relationship that you're \nworking with fernand means that you're dealing   mainly with the client-side it's called the front \nend because it's what you can see in the browser   conversely the back end is the part of the website \nthat you can't really see but it handles a lot of   the logic and functionality that is necessary for \neverything to work one way you can think about   this is that front-end web development is like \nthe front-of-house part of a restaurant it's a   section where customers come to see and experience \nthe restaurant the interior decor seating and of   course eating the food on the other hand back-end \nweb development is like the back of house part of   the restaurant it's where deliveries and inventory \nare managed and the process to create the food all   happens there's a lot of things behind the scenes \nthat the customers won't see they will experience   and hopefully enjoy the end product a delicious \nmeal fun illustrations aside both front-end and   back-end web development serve different but very \nimportant functions when you build a website the   most essential tool that you'll use is your code \neditor or IDE integrated development environment   this tool allows you to write the markup and code \nthat will make up the website there are quite a   few good options out there but currently the most \npopular code editor is vs code vs code is a more   lightweight version of Visual Studio Microsoft's \nmain IDE it's fast free easy to use and you can   customize it with themes and extensions other \ncode editors are sublime text Adam and vim if   you're just getting started though I'd recommend \nchecking out vs code which you can download from   their website now that we've covered some of the \nbroader concepts of what web development is let's   get into more of the details starting with the \nfront end the front end of a website is made up   of three types of files HTML CSS and JavaScript \nthese files are what is loaded in the browser on   a client-side HTML or hypertext markup language \nis the foundation of all websites it's the main   file type that is loaded in your browser when you \nlook at a web site the HTML file contains all the   content on the page and it uses tags to denote \ndifferent types of content for example you can use   tags to create headline titles paragraphs bulleted \nlists images and so on HTML tags by themselves do   have some Styles attached but they're pretty basic \nkind of like what you would see in a Word document   CSS or cascading style sheets lets you style that \nHTML content so it looks nice and fancy you can   add colors custom fonts and lay out the elements \nof your website however you want them to look   you can even create animations and shapes with \nCSS there's a lot of depth to CSS and sometimes   people tend to gloss over it so they can move \non to things like JavaScript however it's really   important to be able to convert a design into \na front-end website layout using CSS javascript   is a programming language that was designed to \nrun in the browser using JavaScript you can make   your website respond to different inputs from the \nuser or other sources for example you can build a   back to top button that when the user clicks it \nthey'll scroll back up to the top of the page   as we mentioned HTML CSS and JavaScript are the \nbasic building blocks of front-end web development   in addition to them there are a few other tools \nthat you'll want to learn at this point package   managers are online collections of software much \nof it open source each piece of software called   a package is available for you to install and \nuse in your own projects you can think about   them like plugins instead of writing everything \nfrom scratch you can use helpful utilities that   other people have written already for instance \nyou can simply use a slider plug-in instead of   having to code it all yourself which could take \ndays to figure out why reinvent the wheel if you   don't have to the most popular package manager is \ncalled NPM or node package manager you can also   use another manager called yarn both are good \noptions to know and use although it's probably   best to start out with NPM in addition to package \nmanager is you'll want to become familiar with   build tools module bundlers and build tools are \nanother essential part of the front-end workflow   on a basic level these tools run tasks and process \nfiles you can use them to compile your sass files   to CSS transpile your es6 javascript files down \nthe es5 for better browser support run a local   web server and many other helpful tasks saving \nyou a ton of hassle if you were to try to do all   these essential steps by yourself three tools \nthat you'll continue to come across a lot are   gulp web pack and parcel personally I like using \ngulp for my own front-end workflows where I just   want to compile my sass and JavaScript files and \nnot do too much else the last tool you'll need   to learn about in this stage is version control \nversion control also called source control is   a system that keeps track of every code change \nthat you make in your project files you can even   revert to a previous chain if you make a mistake \nit's almost like having infinite save points for   your projects and let me tell you it can be a huge \nlifesaver the most popular version control system   is an open source system called git using git you \ncan store all your files and then change history   in collections called repositories you may also \nhave heard of github which is an online hosting   company owned by Microsoft where you can store \nall your git repositories at this point you've   learned the basics of friend development and \nhave a choice to either delve into additional   friends skills or learn about basic backend web \ndevelopment with additional front-end there are   some more intermediate skills that you will \nwant to learn I recommend that you look at the   following SAS responsive design and a JavaScript \nframework SAS is an extension of CSS that makes   writing styles more intuitive and modular it's \na really powerful tool with sass you can split   up your styles into multiple files for better \norganization create variables to store colors and   fonts and use mix-ins and placeholders to easily \nreuse styles even if you utilize just some of   the basic features like nesting you'll be able to \nwrite your Styles quicker and with less headache   responsive design ensures that your sales will \nlook good on all devices desktops tablets and   mobile phones the core practices of responsive \ndesign include using flexible sizing for elements   as well as utilizing media queries to target \nstyles for specific devices and widths for example   instead of setting your contents to be a static \n400 pixels wide you can use a media query and set   the content to be 50% width on desktop and 100% \non mobile building a website with responsive CSS   is a must these days especially as mobile traffic \nis outpacing desktop traffic in many cases once   you have the basics of vanilla JavaScript down you \nmay want to learn one of the JavaScript frameworks   especially if you want to be a full-stack \nJavaScript developer these frameworks come with   pre-built structures and components that allow \nyou to build apps quicker than if you started   from scratch currently you have three main choices \nreact angular and view react which is technically   a library was created by Facebook and is the most \npopular framework right now angular was the first   big framework and it was created by Google it's \nstill very popular even though it's been surpassed   by react recently and views a newer framework \ncreated by Evan you a former angular developer   well it is smaller news and react and angular is \ngrowing quickly and is also considered easy and   fun to use you might be wondering now okay well \nwhich framework is the best the truth is they are   all good and web development there's almost never \na single choice that is 100% the best choice for   every person in every situation your choice will \nmost likely be determined by your job or it simply   by which one you enjoy using the most if your end \ngoal is to land a job at a company try researching   which framework seems to be the most common in \npotential job listings don't worry too much about   which framework to choose it's more important that \nyou learn and understand the concepts behind them   and once you learn one framework it'll be much \neasier to learn other ones after that let's move   on now to our last section backend web development \nthe backend or server side of web development is   made up of three main components the server \na server-side programming language and the   database as we mentioned at the very beginning \nthe server is the computer where all website   files the database and other components are stored \ntraditional servers run on operating systems such   as Linux or Windows they're considered centralized \nbecause everything the website files back-end code   and data are stored all together on the server \nnowadays there are also serverless architectures   which is a more decentralized type of setup this \ntype of application splits up those components and   leverages third-party vendors to handle each \nof them despite the name though you still do   need some kind of webserver to at least store \nyour website files some examples of service   providers are AWS Amazon Web Services or nullify \nCir furless set ups are popular because they are   fast cheap and you don't need to worry about \nserver maintenance they're great for simple   static websites that don't require a traditional \nserver-side language however for very complex   applications the traditional server setup might \nbe a better option on the server you need to use   a programming language to write the functions \nand logic for your application the server then   compiles your code and conveys the result back \nto the client popular programming languages for   the web include PHP Python Ruby c-sharp and Java \nthere is also a form of server-side JavaScript   node.js which is a runtime environment that \ncan run JavaScript code on the server finally   you'll need to learn about databases databases as \na name implies are where you store information on   your server for your website most databases use a \nlanguage called SQL pronounced sequel which stands   for structured query language in the database \ndata is stored in tables sort of like complex   Excel documents then you can write queries in SQL \nin order to create read update and delete data the   database is run on the server meeting servers \nlike Microsoft sequel server on Windows servers   and my sequel for Linux there are also no sequel \ndatabases which store the data in JSON files as   opposed to the traditional tables one type of no \nsequel database is MongoDB which is often used   with react angular and view applications some \nexamples of how data is utilized on websites   are if you have a contact form on your website \nyou could build the form so that every time   someone submits the form their data is saved on \nto your database you can also store user logins   on the database and write logic in the server-side \nlanguage to handle checking and authenticating the   logins and that's how I would recommend you start \nyour journey into web development I've compiled   a list of resources to help you get started \nlearning at any of these stages linked below"
    },
    {
        "video_id": "nVNl2AD9xMw",
        "title": "Full Stack Java Web Development Course | Part 1: Introduction, Tools &amp; Roadmap for Beginners",
        "url": "https://www.youtube.com/watch?v=nVNl2AD9xMw",
        "duration": 1955,
        "transcript": "Hello everyone and a very warm welcome to my YouTube channel that is social and code by rashmi man. First of all I introduce myself. My name is Rashmi Prahanistra. I am a software developer freelancer and I have been actively involved in developing software solutions using PHP, Java and the monster, React and NodeJS. Also over the years I have worked with clients built real world projects and guided many students of BCRMC who want to make their careers in web development. Again very warm welcome to this online learning series of web development in Java and I am here to guide you on a journey to become a fullstack web developer using Java. Okay. Then who is the course for? This course is designed for the students of all levels. That means you are from ABCA, MCA or BTE in computer science or even from a nontechnical background. Also, if you are willing to learn, you are welcome here. Even you are starting from the scratch. I'll guide you step by step from the basics to building complete web applications. Okay, here you learn from this course front end technology that's are HTML, CSS, JavaScript and React and backend development Java with Spring Boot database integration MySQL and the tools G and GitHub generally then come to what what are the goal of this goal is to build respons responsive websites and connect front end with back end and work with APIs and databases and lastly create real world full stack applications. Okay. So before introducing the course first of all you should keep a notebook handy and follow along with the code practice what you learn and ask question also. Okay then let's get started. So you are ready to begin your journey as a full stack web developer in Java. Okay let's drive right in and start basics. We'll explore that what is the first step of development and what is the full stack web development in Java. Okay. Before to enter in full stack web development in Java, let us consider what is full stack web development. Okay. So to understand that let me draw a diagram for full stack web development. This is the diagram to become a fullstack web developer. Okay. If you are having idea of an mailing application like example if you consider Gmail so you go with the Gmail what to accept from user we open Gmail it is going to ask for what username and password okay and sign up or login something else here in input field we are going to fill the username name and password here. Here in you have to input the username and password. Okay. Then now the content whatever and display in the browser this will call the it is a front end part mean this is this part is the front end part because this is shown on the browser. This content is shown in the browser. So this is the front end part. So how to develop this front end? We make it by using some technology that is the front end or UI technologies. So the what are the front end or UI technologies are HTML, CSS, JavaScript, Bootstrap, Angular, React, Vue.js. Okay, these are the and people who develop this front end part we call them as what? Front end or way or UI developers. Okay, front end or web or UI developers and these are the languages to develop these technologies. HTML, CSS, JavaScript, Angular, React or VGS also. Okay. Suppose let's for the example we go to some username local password 1 2 3 4. Now where these user details are present? You have any idea? Where the data is present? When we register our users this data suppose the data Raj and Raj 1 to three where the data is present you have any idea okay where it will be located in your just the database where you store the data permanently by using the database okay so we go with the database that we called it a database and we store our user details in the database like username and password. Okay. Now how to go to this database? So we make the use of database technologies like MySQL, Oracle, SQL server. Okay. And the technology the this technology who used the developers known as database developer or DBA. Okay means database administrator suppose now now from our front end we should able to connect to database. So there should be some middle layer also who are taking the data from front end and connect them to database what they called that are called as back end or server side. So here we make use of sub technologies while having the different types of different technology of server side which take the data from the front end and connect the database. Who is technology? Okay, these technologies are Java that may be Java from Java that may be serless or JSP or spring that may be net that may be PHP that may be Python the Django. Okay. The people is the developer who use the Java technology known as the Java developers. The people who know the net known as net developer and the people who use the PHP those are the PHP developer. Okay, all of you understand or not? Okay. From the background 10 once you fill the data this username and password and when you click on the login it is showing to connect the backward part this back end part in back end it read out data once it read out the username and password it is going to connect the database okay then it is giving the respond the feather that user is present or not in the database and the back end part give the response according to database response to the fonted part like if you are authenticated then you go to the database p or otherwise you fail to login. Okay. The people who develop the front end part we call them the front end developer and who develop the database part we call them the database developer and who develop the middle layer part means using the Java then the Java developer using the net the net developer similarly using which language this developer okay then who should play all the role means One can should play all the role. One can should play the database part. One can same one can play the front end part and same one can play the backend part also. So who should play all the role? Call them as full stack developer. Okay. Who should able to develop the complete project? Okay. Here in this course we were using the Java as back end part. So here we call them as full developer in Java and project development is called as full web development in Java. Okay, all of you understand the now please write in the comment. This is the road map for the full stack web development in Java. Okay. As a full start developer, you should know the front end technology, back end technology, database and tools to develop any software from end to end. Right? Already I discussed some front end technology and backend technology, database also now in depth in short form we discussed this much. What are the front end technology language? HTML, CSS and JavaScript. HTML, CSS and JavaScript are the web development fundamentals. So, make sure you know all the things. What is HTML? HTML stands for hypertext markup language. Okay. It is a standard language. YouTube to create web pages and structure their content like the text, images, link, form etc. You can think of stable as skeleton of a web page. It gives the page its shape and structure. Then the second point is CSS. What is the CSS? The full form of CSS is cascading style sheets. Why use it is used to style and design the web pages already created by HTML. You know HTML are the skeleton of a web pages and CSS. CSS are the clothes and makeup that make the pages good. Okay. Then what is JavaScript? JavaScript is a programming language used to make web page interactive and dynamic. Okay. If the HTML structure and CSS style, then the JavaScript is what? JavaScript was the brain that adds the behavior to your web pages. Okay. Then the next nowadays these three frameworks are used generally angular, reacts and view.js. Okay. You in short we discuss these three first. Okay. What is Angular? Angular is a front end web application framework developed and maintained by Google. It is used to dynamic single page applications using the HTML, CSS and TypeScript. Angular is act as a powerful toolkit that helps developers build large fast and interactive web apps. Then next is what generally today's reacts is used. Okay. ReactJS commonly called as react. It is also a JavaScript library for building user interfaces. This is also for the single page applications. Okay. React act as a tool works to build fast interactive and component based web pages. Okay. It is maintained by meta previously known as Facebook and it's open. source and the next is view.js. What is view js? This is a progressive JavaScript framework used to build user interfaces and also it is the single page applications. Again JS is act as a lightweight and easy to learn framework for making your pages interactive and dynamic light react or angular. Okay. And it is also opensource and created by Ivan a former Google engineer. Okay. Then the next is what? NodeJS. NodeJS and npm is also used. Okay. NodeJS is an open-source serverside runtime environment that allows you to run JavaScript code outside the browser typically on a server. Okay. NodeJS act as a bridge that let Javascript work on back end. Okay. It uses Google's JavaScript engine. Then what is npm? npm is a package manager to install JavaScript packages or libraries. This is the default package manager for but for NodeJS you to install, manage and share JavaScript libraries. This is act as an app store for JavaScript tools and code libraries. Okay. Then this is the front end technology. Okay. Over now use this is the web development using Java. So here the dark technology but Java. So let's you should to know what is Java. What is Java? What is Java? Already you did Java. This is called Java AC. Java standard edition or standalone this mainly used to develop an standalone or desktop application. Code Java is mainly used to develop standalone or desktop application. Can you give the example of standalone application? Please write comment. Okay. What are the standard application generally used? Notepad, calculator, pen, Microsoft word, deter that's the standalone application. Once we download download and install then we did not connect the other system to run the application. These are the independent. Okay. So these are called as the standalone application. Okay. For Java refers to basic features and fundamentals of Java. Okay. It is the foundation for all Java technology like advanced frameworks like springs, hibernate, Java and Android development etc. Okay. What are the basic features of core jaba for fullstack development you learn here? Okay. In code Java here you have to learn basic syntax and structure data types and variables operators expressions up to the file handling. Okay you cover in your Java. Okay then what is spring framer? Now you'll learn a bit of suppose what is spring framework? Spring is a powerful open-source Java framework used to build enterprise level applications. So this is a opensource Java framework. It provides tools and features to make Java development for what for faster easier and more productive especially for building the backend services web apps and rest APIs. Okay. Then what is the spring boot? Springboard is basically an extension of spring framework which eliminate the boiler plate configuration required for setting up a spring application. Okay. Spring boot helps part to create Java web app applications or rest APIs quickly by reducing configuration efforts automatically managing dependencies emburning the web browser providing ready to use features. Okay. Then next is hibernate framework. A Java e programmer you must learn hibernate framework. Okay. What is hibernate? Hibernate is an object relational mapping framework for Java. It connects Java classes means objects to database tables making it easier easier to store, retrive, update and delete data in the database using the Java code. What is spring security? What is spring security? Spring security is one of the popular framework of our Java. therefore implementing authentication and authorization features. Okay. It helps to protect web pages, rest APIs, user accounts and password and even blocks or authorize access automatically. What are microservices? A micros service is a small independent and loosely coupled service that does one specific tax and can communicate with other services through APIs usually rest APIs. Again, microservices break a large applications into smaller modules, each handling one responsible at a time and working independently. Then go to the database part. As a full developer in Java, you should have the good knowledge of database also. Here are the type of database already you have to use in relational database and NoSQL databases. What are those? MySQL, Postgress SQL, MSSQL, Oracle, NoSQL databases and MongoDB. Okay. What is MySQL? MySQL is an open-source relational database management system that is used to store, manage and retype data in a structured format using SQL in structural theory language. MySQL is a digital feeling cabinet that helps you store and organize data efficiently. Okay. What is Postgress 12? It is a powerful opensource object relation database system. It is used to store, manage and retrive data just like MySQL but this has more advanced features. This is supercharged version of MySQL. It is more powerful, more secure and enterprise ready. Then what is MSQL server? MSQL server is a relational database system and what is this? RDMS also and it is developed by Microsoft. Again it is used to store manage retrive data for desktop web and enterprise application using SQL. What is Oracle NoSQL database? What is Oracle NoSQL database? That is a non relations database developed by Oracle Corporation and it designed for applications that require fast, flexible and scalable data storage. Oracle stores unstructured or semistructured data and is best suited for big data, real time analytics, e-commerce and mobile application. And what is the last one? The MongoDB. What is MongoDB? MongoDB is a NoSQL database that stores data in a flexible JSON like documents instead of traditional loan columns like MySQL or Oracle. MongoDB is like a digital filing cabinet where each file can have its own structure. It is perfect for storing flexible or unstructured data. Okay. Then this database part is covered here. Okay. Then tools. As a fullstack Java developer, you should be able to known these tools. And these tools have to develop and deploy the web apps. And the tools are Apache Maven, Gradel, Genkins, Eclipse and Intelligure and Docker, Jira, SBN, Apachant and Java decompiler. What are these tools? What is this? What is Apache Maven? Apache mappen is a build automation tool and that is used primarily for Java projects. It helps you compile code, manage dependencies and run test and build packages. Okay, next one is Gradel. Graded is a modern build automation tool used to compile, test and package code just like Apache Min, but it is faster and more flexible and uses a programmatic approach. Okay. And the next one is G. G is a version control system which helps you track changes in your code. Collaborate with others and revert back to previous versions when needed. You can think git as a time machine for your project. Okay. Then what is Genkin? Genkin is an open-source automation tool used to build, test and deploy software automatically. Okay. Then what are the Eclipse and Intel idea? These two are the editor ID is integrated development environments used to what you to write, test, debug and manage the Java programs and for other programming languages also these are used. Okay, this editor are used because here but this is for code suggestion. This is for error checking build tools and debuggers. Okay. Then docker what is a docker? Docker is a containerization platform that helps you package an application along with everything it needs to run like code, libraries and dependencies into a single unit called container. This is a virtual box. Then what is Jira? Jira is a project management and issue tracking tool developed by Atasian. It is widely used in software development to plan, track and manage tax works and projects especially in agile and scrum environments. Then what is SPN? SBN what is SBN? SBN this is the sub version. It is a centralized version control system used to manage and track changes in source code and project files. This act as a digital file history system and then the next is apach ant. What is apachant? Apach ant is a Java based build tool you to automate tasks like compiling Java code packaging it into jars running tests and deploying the application. This Apache and tool act as a robot that follows instruction writing an XML file to build and to manage your Java project automatically. And the last one, what is the last tool? The last tool is Java decompiler. That is a tool that converts Java.class files which is the compile by code back into readable Java dot Java source file. This tool act like a code recovery tool. Okay, that's much these are the requirements for what full stack development in Java. You have to learn this much inside your course in web stack development in Java. Okay, that's much. Okay, thank you so much for being here. Let's build your future one line of code at a time. See you in the next video. Thank you very much. In next class we will start what? From the Java or object oriented concept. I would tell what I have to start in list class. Then thank you. Then if you found this video helpful and you okay if you found this video helpful don't forget to like, subscribe and share it with your friends. Let's do it together. See you in the test session. Bye."
    },
    {
        "video_id": "x3c1ih2NJEg",
        "title": "How does the INTERNET work? | ICT #2",
        "url": "https://www.youtube.com/watch?v=x3c1ih2NJEg",
        "duration": 539,
        "transcript": "How does the internet work? The video you are watching now traveled thousands of miles from a Google Data Center to reach\nyou. Let's learn how the internet works by getting to understand the details of\nthis data's incredible journey. The data center which can be thousands of miles away from you has your video stored inside it. how does this data reach your mobile phone or a laptop? An easy way to achieve this goal would be with use of satellites. From the data center, a signal could be\nsent to the satellite via an antenna, and then from the satellite a signal\ncould be sent to your mobile phone via another antenna near to you. However, this way of transmitting signals is not a good idea. Let's see why. The satellite is parked nearly 22,000 miles above the earth's equator, so in order for the data transmission to be successful, the data would have to travel a total distance of 44,000 miles. Such a long distance of travel causes a\nsignificant delay in receiving the signal. More specifically it causes huge\nlatency which is unacceptable for most internet applications so if this video does not reach you via a satellite then how does it actually get to you? Well it is done with the help of a complicated network of optical fiber cables, which connect between the data center and your device. Your phone could be connected to the\ninternet via cellular data or any Wi-Fi router, but ultimately at some point your\nphone will be connected to this network of optical fiber cables We saw at the beginning that the video\nyou are currently watching is stored inside a data center. To be more specific, it is stored in a\nsolid-state device within the data center. This SSD acts as the internal memory of a server. The server is simply a powerful computer\nwhose job is to provide you the video or other stored content when you request it. Now the challenge is how to transfer the data stored in the data center specifically to your device via the complex network of optical fiber cables. Let's see how this is done. Before proceeding further we should first\nunderstand an important concept which is the concept of an IP address. Every device that is connected to the Internet whether it is a server a computer or a\nmobile phone is identified uniquely by a string of numbers known as an IP address. You can consider the IP address similar to your home address that is the address,\nthat uniquely identifies your home. Any letter sent to you reaches you precisely because of your home address. Similarly in the internet world an IP\naddress acts as a shipping address through which all information reaches\nits destination. Your internet service provider will decide the IP address of your device and you are able to see what IP address your ISP has given to your\nmobile phone or laptop. The server in the data center also has\nan IP address. The server stores a website so you can\naccess any website just by knowing the server's IP address. However, it is\ndifficult for a person to remember so many IP addresses. So to solve this problem domain names like youtube.com, facebook.com etc are used which correspond to IP addresses which are easier for us to remember than the long sequence of numbers Another thing to notice here is that a server has the capability of storing several websites and if the server consists of multiple\nwebsites all the websites cannot be accessed with the server's IP address. In such cases additional pieces of information, host headers are used to\nuniquely identify the website. However, for the giant web sites like Facebook.com or YouTube.com the entire data center infrastructure will be dedicated\nto the storage of the particular website. To access the internet we always use\ndomain names instead of the complex IP address numbers. From where does the internet get IP addresses corresponding to our domain name requests. Well, for this purpose the internet uses a huge phone book known as DNS. If you know a person's name, but don't know their telephone number you can simply look it\nup in a phone book. The DNS server provides the same service to the internet. Your internet service provider or other organizations can manage the DNS server. Let's have a recap of the whole operation. You enter the domain name, the browser sends a request to the DNS\nserver to get the corresponding IP address. After getting the IP address, your browser simply forwards the request to the data center, more specifically to the respective\nserver. Once the server gets a request to access\na particular website the data flow starts. The data is transferred in digital format via optical fiber cables, more specifically in the form of light\npulses. These light pulses sometimes have to travel thousands of miles via the\noptical fiber cable to reach their destination. During their journey they often have to go through tough terrains such as hilly areas or under the sea. There are a few global companies who lay and maintain these optical cable\nnetworks. These visuals show how the laying of optical fiber cables is done with the help of a ship. A plow is dropped deep into the sea from\nthe ship, and this plow creates a trench on the\nseabed and to which places the optical fiber cable. In fact, this complex optical cable network is the backbone of the Internet. These optical fiber cables carrying the light are stretched across the seabed to\nyour doorstep where they are connected to a router. The router converts these light signals to electrical signals. An Ethernet cable is then used to transmit the electrical signals to your\nlaptop. However if you are accessing the Internet using cellular data, from the optical cable the signal has to be sent to a cell tower and from the cell tower the signal reaches your cell phone in the form of\nelectromagnetic waves. Since the Internet is a global network\nit has become important to have an organization to manage things like IP\naddress assignment, domain name registration etc this is all managed by\nan institution called ICANN located in the USA. One amazing thing about the\ninternet is its efficiency in transmitting data when compared with\ncellular and landline communication technologies. This video you are watching\nfrom the Google Data Center is sent to you in the form of a huge collection of\nzeros and ones. What makes the data transfer in the internet efficient is the way in which these zeros and ones are chopped up into small chunks known\nas packets and transmitted. Let's assume these streams of zeros and ones are divided into different packets by the server where each packet consists of six\nbits. Along with the bits of the video each\npacket also consists of the sequence number and the IP addresses of the\nserver and your phone. With this information the packets are routed towards your phone. It's not necessary that all packets are routed through the same path and each packet independently takes the best route available at that\ntime. Upon reaching your phone the packets are reassembled according to their sequence number. If it is the case that any packets fail to reach your phone and acknowledgement is sent from your phone to resend the lost packets. Now compare this with a postal network with a good infrastructure, but the\ncustomers do not follow the basic rules regarding the destination addresses. In this scenario letters won't be able to reach the correct destination. Similarly in the internet we use\nsomething called protocols for the management of this complex flow of data\npackets. The protocols set the rules for data packet conversion, attachment of the source and destination addresses to each packet and the rules for routers etc for\ndifferent applications the protocols used are different. We hope this video has given you a good understanding about how the internet\nworks, more specifically about the amazing journey of data packets from the data center to your mobile phone. Please don't forget to support us at\npatreon.com. Thank You!"
    },
    {
        "video_id": "zN8YNNHcaZc",
        "title": "How does the internet work? (Full Course)",
        "url": "https://www.youtube.com/watch?v=zN8YNNHcaZc",
        "duration": 6163,
        "transcript": "This course will help someone with no \ntechnical knowledge. Understand how the   internet works in frost teaches this course \nwith tons of visuals, just like he has taught   1000s of people on Udemy. The internet is a part \nof our daily life, and we use it constantly.   But what is the internet? Have you ever really \nthought about it? Have you ever wondered what   happens in the background? Then you enter a \nweb page? If your answer to all these questions   is yes, you are definitely looking at the right \ncourse in this course, I assume you don't know   anything. And I am slowly explaining what the \ninternet is, you don't need any prior knowledge   to follow this course, since this course tells you \neverything from scratch, which mean abstractions,   these abstractions will allow you to understand \nthe subject without knowing details. I think   everyone who uses the internet should know its \nbasic features. Everyone who uses the internet   needs to know the ISP, everyone who uses the \ninternet needs to know that the internet is   just cables spread all over developed. And in \nthis course, we will go on a journey together.   And we will look at all these concepts in a very \nvisual way. I mean, you will see exactly how the   internet works, which are eyes. In addition, at \nthe end of the course, there are some questions   related to this course. And by answering \nthem, you can benefit from this course, at   the maximum level. Okay. regardless of your age or \nprofession, this course is for everyone, you will   absolutely understand what the internet is when \nyou finish this course. So let's dive into it.   Now, we are going to talk about a scenario. Let's \nsay you are the system administrator of a small   company, and your boss wants you to enable all \nthese computers to communicate with each other.   I'm in PC, one should be able to communicate \nwith PC seven, our PC five should be able to   communicate with PC four, and so on. He's got the \npoint. But the question is, how do we do such a   task. And this is where the solution device comes \ninto play. The switch is the device we use for   computers in the same environment to communicate \nwith each other. When I say in the same   environment, what I mean is that I'm talking about \ncomputers in the same office house or at work   close distance to each other. And this scenario is \na good example for such a situation, there is an   office and in this office, we have seven computers \nthat communication of them is required. Wonderful.   We have a switch to accomplish the communication \nof computers. This is good. However, the question   is, Can these seven computers communicate with \neach other right now? And the answer is big. Now,   because first of all, these seven computers \nneed to interact with the switch somehow. But   how can we do that? I know that you have some \nideas and you are probably guessing right we must   use cables to connect computers to the switch. As \nyou can see, we are connecting all the computers   to the switch with the help of cables. We \ngenerally use copper cables for this task. And the   type of these copper cables can generally be cat \nfive cable or cat six cable in small environments.   By the way, cat six cables are faster than cat \nfive cables and cat represents category okay.   On the other hand, in addition to copper cables, \nsome switches support fiber optic cables as well.   And it is important to note that fiber optic \ncables are generally much faster compared to   copper cables in data transmission. This \nis very important. And for switch devices,   there is a crucial point to be aware of. Please \nnote that if there is a switch in the environment,   and if you want to connect \ncomputers to that switch,   we must definitely use a cable that has generally \na copper cable or fiber optic cable. What I have   tried to say is with wireless technology, you \ncannot connect computers to a switch switches   only work with cables. This is very vital \nguys. If you want to use a switch device,   you have to use cable to connect your devices to \nthe switch. It's that simple. However, if you want   to connect computers in the same environment to \neach other, by using all the wireless technology,   you can use an access point device in If I switch \ndevice, I mean, you can use both a switch device   or an access point device. In order to connect all \nthe seven computers, both of them separately is   acceptable for this purpose. The only difference \nbetween these devices is access points use   wireless technology while switches use \ncables. Okay, there are seven computers   in this environment. And we can connect these \nseven computers. By using switches and cables,   just like you see in the picture. Or in the \nsame way, we can use an access point device   instead of a switch device. And if you use an \naccess point device access point uses wireless   technology instead of cables while communicating \nwith devices. In summary, both the switch device   or an access point device enable these seven \ncomputers to communicate this is obvious,   but one uses cable and the other one uses wireless \ntechnology. Anyway, what I just want you to know   right now is we generally use copper cables \nin order to connect computers to the switch   in the environment such as a home or office. By \nthe way, I want to focus on the source device   instead of the access point device in discourse, \nwherever. And at this moment, all these computers   can communicate with each other which is because \nthey connected to the switch by using cables.   And this means that they created a network. In \nother words, the reason that these computers   can communicate with each other is all of them \nare in the same network and we call this special   network as local area network or briefly, LAN. \nA local area network is a collection of devices   connected together in non physical location, such \nas a building, office or harm. As I just said,   if you want to create a LAN, this location must \nbe a restricted location in terms of area, I mean,   you cannot create a LAN between computers located \nin United States and computers located in Russia.   On the other hand, this area is very suitable \narea in order to create a LAN. Therefore, these   computers can communicate with each other because \nall of them are on the same land. With the help of   this search search, we can deduce that if you want \nto create a LAN, when it is the wish device. By   using a switch device, we can create a local area \nnetwork. And if we consider the millions of local   area network all over the world, we can easily \nunderstand how important is swish device is,   you might think that all the houses in the world \nare actually a local area network, you have a LAN   in your house or your neighbor's home also has a \nLAN or there is also a LAN in the office where you   work. Okay, you catch the idea. And now let's take \na closer look at the communication of computers.   And what this event actually represent. Let's say \npc one was to send a message to the PCs six. By   the way, the messages generated by computers has a \nfew special names, some people call them as packet   and some people call them as frame both of them \nis okay but in this course, I prefer to use packet   instead of frame. Okay, PC one, you set a packet \nto the PC six. As you see in Division, the packet   first goes to the switch, and then the switch \nlooks at the inside of the packet or learns the   destination of the packet. And finally, the \nswitch sends the packet to its destination.   And if pc one can set a packet to the PC six, this \nmeans that PC One and PC six can communicate with   each other. The logic is basically this if a \ncomputer can send a packet to another computer,   this refers to these two computers are on the same \nnetwork and they can communicate with each other.   This information is so crucial guys, \nokay. However, maybe by looking at   only this switch image, what the switch device \nactually is may not be fully visualized in your   mind. For this reason, we will now examine this \nslide for you to understand the event better.   This is the real version of a switch device. \nAnd as you can see, there are many ports   on a switch device This is important also the \nnumber of ports varies from one switch device to   another switch device. I mean different switches \nhave different numbers of ports. Some switches   have 10 ports, while some switches have more than \ntransports and of course, this generally leads to   an increase in price. Okay. By the way, these \nports have a special name and they are called   LAN ports. This probably makes sense to you \nbecause as you know, we create lands by using   3g devices. For this reason, I think it is so \nreasonable to call these ports LAN ports. Because   by connecting these computers to these ports, \nwe can create a LAN. And in addition to this,   there are LAN ports on the back of our \ncomputers, or on the side of our laptops,   just like these LAN ports, you can see \nthe Related regionals on the right side.   And to establish a connection between computers \nand the switch, we connect the LAN port on the   computer and the LAN port on the switch with \nthe help of a cable. So let's do this. Let's   start with this port and PC one, then, let's \nconnect this port and P theater. After that,   let's connect this port and PC three. And finally, \nI want to make a connection between this port   and PC four. Wonderful. And currently, these \ncomputers can communicate with each other. But   how exactly does this communication happen? From \na switch perspective, let's take a look at this,   let's say pc one master communicate with PC far \nsaw, it will send a packet to the PC far this   packet will go to this part of the switch first. \nAnd there we go. Afterwards, that part, we will   give the packet to the hardware inside the switch \nOkay. Then, this switch, we look inside this   packet, our loves his destination. After that \nthe switch give this packet to this port that   is connected to PC far. And finally, the switch \nsays the packet to the PC far. Okay, wonderful.   And to summarize, currently, we have \nconnected these four computers to each other   thanks to this switch. This means we have created \na local area network. And these computers can   easily communicate with each other. Since they're \non the same LAN. I hope everything is quite good   software. And the switch device is visualized \nspreader in your mind, thanks to this slide. But   there is a little issue here. Let me explain. \nIf you are aware, our computers were in the   same network. And we have only talked about the \ncommunication between dos devices. We have never   talked about how these computers can connect to \nthe internet. Right? So the question is, Can these   computers communicate with the internet just \nby having a switch device? And this my friends   will be the question that we are looking for an \nanswer in the next lesson. See you guys soon. Bye.   In our previous lesson, we briefly talked about \nhow to connect computers in our office, and how   do we create a network and I said that we can \ncreate a LAN with the help of a service device.   But the problem is currently these computers \ncan only communicate amongst themselves,   they cannot communicate with the internet, because \nthe all the task of the switch is to create a LAN   and enable the communication of the devices in the \nsame land. Great. And by the way, I would like to   remove this lamp statement from the visual because \nyou can understand that there is a LAN here, thus,   we can work more comfortably. Wonderful. And \nthe main question is, how do we connect these   computers to the internet. And this is where the \nrouter device comes into play. Let me explain. The   main task of the router is to enable computers \nto connect to the internet. Without a router it   is impossible for us to connect to the internet. \nAnd in order to provide this connection. I mean,   in order to provide a connection to the Internet. \nFirst of all, we must connect this switch to this   router. And this cable is a copper cable. Just \nlike other cables. This is good. But currently,   what we have to do isn't over we still can't \nconnect to the internet in this situation   because we need a connection between the water \nand the internet as well. And as you know,   a special cable comes to our homes or offices \nand this cable is given us by internet service   provider and takes to this cable. We connect \nto the internet if you have never heard of   internet service service provider. Don't worry, \nwe will talk about it in detail. But for now,   all you need to know is the internet \nservice provider is giving us   this cable for a certain amount of money so that \nwe can connect to the internet easily. Okay,   so currently, we have everything necessary to \nconnect to the internet. By using these computers,   hams, let's see the basic tasks of the switch and \nrouter one by one on the animation. These seven   computers in the office can communicate with each \nother thanks to the switch. For example, let's say   pc one was to communicate with PC five, for \nthis purpose, PC, one will send a packet to   the PC five, sir, is you know, the packet firstly \ngoes to the switch. And afterwards, this switch   learns the destination of the packet. And finally, \nthis switch sends the packet to its destination.   And there we go. This is how two computers in the \nsame land communicate with each other. And please   always remember, a switch device is enough \nfor us in order for communication of devices   in the same land. On the other hand, a router has \nno role in the communication of different devices   in the same line, like PC One and PC five. This \nis very vital. Okay. I hope I could explain the   events. And however guys, what if pc one was to \ncommunicate with the internet? In other words,   what will happen if pc one first to send a \npacket to the internet? Let's see. First of all,   you should remember this information. If a \ncomputer can send packets to the internet.   This means that this computer communicates with \nthe internet. For the speaking I believe that   you exactly understand the logic of this event \nanymore. If we can send packets from one point to   another point, these two points can communicate. \nIt's that simple. But the question is,   how will pc one send packets to the internet. \nTo be able to do this first PC, one must start   its packet to the switch just like before, because \nthere is no other way for PC one to be able to eat   the router, right? I mean, if pc one was to send \na packet to the internet, this packet must reach   the router no matter what, because the router is \na door to access the internet. This is obvious.   Hence, if pc one wants to communicate with the \nrouter, it must start its packet to the switch   first. After that, the switch looks at inside \nof the packet and understand that the packet   wants to go to the internet. So it sends \nthe packet to the router. And there we go.   And then the router firstly looks at the inside \nof the packet and understand that the packet wants   to go to the internet. And afterwards, it sends \nthe packet to the internet over this part. And   there we go. By the way, if you're aware, we have \nplucked this cable that we purchased from the ISP   into this port, this is our base. I believe that \ncurrently you can easily imagine in an intuitive   manner, how the cables coming to router like this \nor like this are plugged into the ports. I mean,   there are some ports on router, and you need to \nput the cables into that box. It's that simple.   I will not show this visually, because \ndetailed information about the ports   isn't important for you. At this moment, you just \nmust understand the logic behind the router. Okay.   And as a result, PC one sent its packet to the \ninternet. In other words, PC one and the internet   communicated. And the device that helped us to \nconnect to the internet is durata. Wonderful.   I believe that you understand the most basic \ntasks of the sewage and water. And I hope   the information may be useful \nfor better understanding.   However, I want to ask you two questions. My \nfirst question is, can you visualize the internet   in your mind? And the second question \nis, what exactly does the internet meme   and these will be the equations that we are going \nto discuss in the next lessons. See you guys.   Before discussing the meaning \nof connecting to the internet,   from a computer perspective, I think it is helpful \nto know what the internet exactly stands for.   Because if you're really starting from scratch, \nI mean I assume that you are real newbies,   you may not know exactly what the internet is. \nFor this reason, I want to visualize the internet   for a better understanding. To do this, in this \nlesson, we are going to see how a packet moves   on the internet. By the way, keep in mind that \nthis model USA is a simplified model designed   to make the concept is the john deere stat. \nSo this structure in real life is much more   complex than you see individual. But with this \nsimplified model, you will understand the logic   of the event very well, I promise you. And \nI believe that's all you need right now   is you can see, there are many routers on the \ninternet, right. And there is a special reason for   this. So at this moment, I would like to give you \nanother piece of information about errata. irata   is a device required for a computer or \nelectronic device to connect to the internet,   you know this definition. On the other hand, you \ncan think of the router is the device we use to   communicate with your computer in another part \nof the world, or you can think of the router is   the device we use to communicate with a computer \nin a different plan. I mean, if you are aware,   there is a LAN here, right. And there is \nanother LAN here, this is obvious. Therefore,   we can draw the following conclusion connecting to \nthe internet actually can stand for connecting to   the another computer located anywhere in the \nworld. I mean, you can think of the internet   is the structure that connects all the lands \nall over the world. I want to repeat this again,   you can think of the internet is a structure that \nconnects all lamps, all over devout. And as you   know, there are millions of lamps connected to \nthe internet, except these lands. Wonderful. I   hope that everything is good so far, but there's \na thing that we need to consider. So I want to   ask you a question. Why are there so many routers \nhere? Let me explain it in a simple manner. First,   you should know that these routers are distributed \naround the world in an organized manner. However,   routers aren't the only devices in the structure. \nThis is important. There are tons of routers, and   other different devices in this structure, \ndistributed pre divide layer. But focusing on only   routers is enough for us in order to understand \nthe concept behind the internet. And the first   question that comes to your mind is probably \nwhy routers are so important to the internet.   As a matter of fact, the answer to this question \nis hidden in the core task of errata. The device   we use to enable different lands to communicate \nwith each other is dhiraj. Right? And text to the   internet, we can connect all the laughs in the \nworld to each other. You know, for this reason,   it makes perfect sense to use many routers to \nconnect millions of local area networks together.   These last few see are just two of the millions \nof local area networks all over the world. In   summary, if the internet must connect millions \nof local area networks, it is obvious that   it needs routers. I hope you got this. And \nonce you understand the importance of the   router for the internet, you probably think of \nanother question. And the second question that   probably comes to your mind is why there are \nso many routers instead of just one router.   And I think this is a more critical question \nthan the first question and let me answer it   on the ratio. But before answering this question, \nthere is something in this picture that should   catch your attention. Please look carefully at \nthe picture and try to find this difference.   As you can see these last on the visual one device \ninstead of a switch and a router. So if there is   no switch in the environment, how can there be a \nLAN or if there is no router in the environment?   How can it be connected to the Internet, and \nthis is where the home router comes into play.   The home router is a common device consisting \nof a router and switch combination hands these   devices in the last hour mix of the switch and \nrouter. This means that if we have a home router,   we don't need an additional switch. And Roger, \nthis device is enough for small and moments   like a home or small office. This is important. \nI won't repeat this again, a home router is   enough for us in small environments, or if there \nare very few devices in the environment, okay,   I showed you home router, because most \nof you have these devices in your home,   and you connect to the internet by using home \nrouters. For this reason, I wanted to tell you   what these devices are in order to avoid \nconfusion. However, please note that if   there are too many devices in the environment, \nthe home router will be insufficient. And you   may need additional switch and router, you catch \nthe idea. And now let's go back to our question,   why there are so many routers, instead of just \na single router. Imagine that there is a single   router in the middle of the world, instead of \n1000s of routers distributed all over the world.   In this case, millions of electronic devices \naround the world will tell to be connected   to the same router. This is obvious, this means \nthat this single router needs millions of parts,   isn't it. And it is impossible to design such \na device. But this is not done the problem. In   addition to it, if there was only one router, \nthe entire lot of the all devices in the world   won't be on that router. And this is another \nproblem. Because in computer science,   we don't want to give all too lot on a single \npoint. We even call this problem, the single   point of failure. And this is a problem that needs \nto be considered to be able to teach it better.   Let me give you an example. Imagine this router \nis broken somehow. This means that the Internet of   the whole world is crashing down at the same time, \nright? Because we only use a single router to   connect all this around the world. Rule two broke \ndown and the whole internet crashed down. It's   that simple. Just think about the consequences of \nthis problem. In a second, this will be terrible,   right. And so far, we have talked about two vital \nproblems. But it isn't our another major problems   is the cable length problem. Imagine how long the \ncable must be if there was all one giant router   in the middle of the world, especially LANs that \nare the furthest from the giant router will need   very long cables. This is obvious, right? \nTherefore, this design is a very problematic   design. And the solution for all these problems \nis this distributed structure all over developed,   you catch the idea. But to make sure you fully \nunderstand the main logic of this structure,   I want you to do an exercise, I want you to \ndetermine why such a structure eliminates   the problems we talked about shortly before, I'm \nsure that you can handle this. Just do it guys.   I asked you a question at the end of the previous \nlesson. And I know that you were all analyzing the   situation. But let's do it together just in case \nis you know, if he used a single router in the   middle of the world, we will have problems with \nthe overloading of the router. On the other hand,   we will need made alone cables for less that are \nthe furthest from the giant router. But as you can   see in this structure, the cables don't have to \nbe that long. And this is an important advantage.   Actually, of course, we can need long cables \nin this structure too, but not as much as in   the other structure. After all in this structure, \nthere can be many kilometers between two routers,   this is reasonable However, this is by no means \nlaying cables from one end of the world to the   other end right. And while we only connect \ntwo routers with one cable in this structure,   we will connect millions of lamps to the \ngiant router in the other structure. So   we will need a lot of Furlong cables to a single \npoint and it creates a huge mess. Imagine cables   coming to the giant router from millions of lamps \nthat locate in the farthest area. He got the point   by using this structure. we minimize the \ncable mess and be avoid overloading of errata   everything is good. But what about a lot of \nrodding since there are many routers load balanced   process is very efficient in the distributed \nstructure, I mean, this system works very   well. And in addition to load balancing, it solves \nthe single point of failure problem as well. For   example, this router, this router, this router and \nthis router are broken somehow, in this case, the   internet continues to work properly, right? Only \nits efficiency decreases a bit. On the other hand,   when there is only one router, and if this router \nis broken, the whole internet crushes down and   this was very bad. So I believe that consistency \nis very important for such a huge structure, like   the internet. And now, I want to show you a visual \nthat shows the cables between different countries   and different continents. With this visual, you \nwill understand much better what the internet is.   These cables are very important, especially for \nthe communication of countries that there is an   ocean between them. And this visual represents \nreal life itself. Unlike the simplified model,   we use 99% of all international communication on \nthe internet is provided by these 468 cable lies   late under the water. This is very crucial guys. \nSome of these cables are only 131 kilometers long,   while others are around 20,000 kilometers long, \nand so on. And the funny thing is breaking one of   these cables can cause the Internet of a whole \ncontinent to go away in a flash time. In fact,   it was happen such an event in 2018. And I \nwant to show this on a different image. Okay,   I want you to focus on this red cable. \nThis is an almost 17,000 blog cable   that starts in France or reaches third Africa. \nAnd this cable connects down to two countries   on the west coast of Europe and Africa to each \nother and to the internet. And the Internet of   10 of these countries crashed down when \nefficient port accidently cut the cable.   And I think this was a definitely a tragic karmic \nevent. In addition to this is you can imagine this   is not the only problem that happens to cables, \nbecause we are talking about 4 million kilometer   long cables spread all over the world. So, there \nmust be something more as a matter of fact,   nearly 200 problems are encountered each year. \nAnd these are substantially related to shifts   or natural disasters. And there is a fun reason \nthat I prefer to use substantially words,   let me explain in 2007, see pirates stall 11 \nkilometers of a cable connecting Thailand,   Vietnam and Hong Kong to each other. And they \nsold this long cable as scrap by dividing it.   And I think this event is more surprising than \nthe incredible infrastructure of the internet.   Now, I have back to the first slide, because there \nis something I want to show here. These colorful   cables generally represent intercontinental \nconnections under waters. But for example,   if you look at Russia, land cables are not visible \non this image. Please don't be confused about it.   Of course, there are cables and \nrouters distributed all over Russia,   they are just ignored in this image. I mean, \nthe main purpose of this image was to show   you how devices from different continents \nare interconnected under the water, okay.   Also not that all of these cables under waters \nare fiber optic cables. Because the fastest   data transmission cable type is fiber optic \ncables. And intercontinental data transmission   must occur at the highest speed, right. And \nanother reason of why we don't use copper cables   is well the length of the copper cables increases, \nthe probability of errors in data transmission   increases as well. On the other hand, even \nif the fiber optic cables are very long,   they transmit the data to its destination almost \nwithout error. And this is another reason that   why fiber optic cables are used over long \ndistances. Great. I think it is important   for you to understand what the internet really \nis. It is very vital to be able to visualize it   in your Might, because no matter \nwhat area of it you are dealing with,   you need to grasp this basic subject. Actually, \nthere was something else I wanted to show in this   lesson. But I don't want to extend this lesson \nany further, we will continue where we left   off in the next lesson, that will be a very \nimportant lesson. See you guys in a moment.   In this lesson, we are going to discuss how a \npacket moves over the internet. In this way,   you will understand how to devices in different \ncountries communicate with each other,   we will see this on an example, let's say this \ncomputer in LAN one was to communicate with this   computer in Atlanta. Okay. In other words, let's \nassume that this computer first to send a special   packet to this computer. So, this packet must go \nto this router to exit from the land one you know,   because our destination is the art of land one I \nmean it is a different network, our destination   is Atlanta, and we can set our packet over the \nInternet to land and now, we are going to do this   exactly first, this computer sends the packet to \nthe switch after the switch receives the packet,   this switch looks at the destination address of \nthe packet and understand that it has to send   the packet to the router and after the raw \nto receive the packet. Reuter looks at the   content of it and learns his destination address. \nHence, it understand that it must send the packet   to the internet because the destination of the \npacket is in a different network than LAN one. So,   router must start the packet to this router that \nis connected because this router is the key router   for LAN one to connect to the internet, I mean, \nif this router needs to send a packet to the   internet, it must send the packet to this router \nno matter what there is no other option right and   you can think of this link is the connection of \nland one to the internet. And if this link is   cut somehow the devices in land one cannot access \nthe internet. It's that simple. After this point,   things will get a little complicated. So please \nlisten to me very carefully. After packet   reaches this router, the packet has three \noptions to go this path, this path or this   path right this is obvious but the question is \nwhich path is better option to go for the packet?   And in order to answer this question, first \nwe need to discuss what what the table is each   router must have a special table inside called \nrouting table. And after receiving a packet,   a router looks at its routing table to learn which \npath it must send the packet. For this router,   it should be this path, this path or this path. \nright this is obvious. And if you're aware,   firstly, draw to receives the packet from \none of its ports. I hope that you can imagine   all these cables that come to the router are \nplugged into a port on the router. And after   the raw to receive the packet rotor learns the \ndestination of the packet and sends the packet to   an appropriate port according to the information \non the routing table. And we call this operation   forwarding is the result every router needs to \nlook at its routing table to learn which part   it must forwards the packet. In other words, \nwe can easily understand that routing tables   need to have information that which part a packet \nwill got okay. It is very important to know this   fundamental task of the rhotic table. Each router \nhas a special processor. And information in the   routing table is created by this special processor \nusing many different algorithms. These algorithms   determine the path that's a packet mascar. \nAnd the results of these algorithms are added   to the routing table. Okay, is the result. This \nrouter will look at its routing table or learn   which path the packet must be forwarded one, \ntwo, or three. Meanwhile, when a router makes   this decision, it always ignores the path that \nthe packet came from, because it makes no sense   to forward the packet back the way it came from. \nRight. And let's say according to the routing   table of this router, the packet must be forwarded \nover path tree. And there we go. After that,   this router needs to look at its routing table to \ndecide Which paths the packet mascot? Assume that   routing table save the packet must be forwarded \nover patter. So the packet will go to this route,   right. And there we go. If you are aware, the \nevent is always the same. And it will continue   to be the same in every router until the packet \nreaches lanter. Anyway, let's get going very left   off this router must look at its routing table to \ndetermine which path the packet will be forwarded,   let's say router choose patwon. So the \npacket will go to this route, right?   Wonderful. And at this moment, please listen \nto me very carefully because there is a tricky   part here. When you look at the packets \nfor the current position of the packet,   you probably think of the most reasonable \noption as pactor. Because the shortest   path to be able to access this router that is \nconnected to this router seems to be patter,   right. And if we choose path one, for example, \nwe have to go to this router first. From here,   we can go to this route. Or if we choose path \nthree, we will go to this router first. And   from here, we can go to this router similarly. \nBut if we choose path two, we can go directly   to this router. And this is what we want. But \nis this really the case? Let's see together.   First of all, never forget that routers always \nwant to deliver the packet to its destination   as fast as possible. So if this router chooses \npath three, instead of patter, it may seem   unreasonable to you at the beginning, I understand \nthat because you decide with a very simple logic,   you are just using your eyes. However, routers \nuse many algorithms when creating the routing   tables. And these algorithms have many variables, \nI mean, routers have to take into account many   situations when they are creating routing tables, \nfor example, let's call every router is a point in   this structure, okay. So when routers create the \nrouting tables, they are not only concerned with   the number of points when choosing the shortest \nroute to the destination, this is really, really   important. And I want to give an example to you \nto understand this subject better. In some cases,   routers control the traffic of the links they \nare connected to. And if a path is still busy   in terms of packet density, rotor will not set \nthe packet over that part. I mean, for instance,   there may be an excessive density on the path \nto line, even if it seems the best option.   Okay. And syst Road who knows this line is \ntoo busy that creating its routing table,   it may decide that it is more convenient set \nthe packet or pantry instead of Patra. And   we call this situation congestion control. \nOkay, I think that I could get to the point.   As a result, the router says the packet \nover pantry. And here we go. As you can see,   the number of points that the packet \nwent through has increased. However,   with the selection of path three, the packet \ncan probably reach its destination faster.   Don't forget this. And after this moment, let \nthe packet go to this right and there we go.   And this router knows that the packet will go to \nthe lamp and it sends the packet to the router in   the half. Okay, by the way you can think of this \nline is a straight line like that. And this router   knows that the packet came to this computer. \nSo it sends the packet to the related computer.   Wonderful. As you can see, two devices located in \nthis study areas basically communicate with each   other. Thanks to the internet, we can communicate \nin milliseconds with a device on the other side of   the belt text to the internet. I'm talking about \nmilliseconds, guys, this is a huge thing. And   that's the main reason of why the internet is one \nof the most important things that mankind created.   I hope I was able to explain intuitively what \nthe internet represents. However, there is also   something else very important that I have to say. \nI want to tell you the bookish definition of the   internet. The internet is the network of networks. \nLet me repeat the internet is the network   of networks. I believe that you got this but I \nwould like to make this definition more meaningful   to you. Firstly Think about your own heart, maybe \nyou have a lot of devices that can connect to   the internet, for example, computers, mobile \nphones, televisions, game consoles, tablets,   and many, many more. Similarly, most people have \nmany devices with an internet connection in their   home, just like you, right? In the same way, \nyou can think about a company or an enterprise   that has a huge number of devices. And you know \nthat there are many companies and enterprises   in all over the world. So as you notice, \nthere are many small or medium sized labs   spread all over developed. And all these lands on \nthe visual represent these networks. As a result,   the combination of all these networks stand for \nthe internet itself, this is very important,   the combination of all these networks stands \nfor the internet itself. In other words,   we are talking about a huge system in which \nalmost all electronic devices in the world   used to communicate with each other. By the way, \nthere is a very important part here to understand   on the visual, we call this the structure that \nis in the middle of the visual as the Internet,   and you will see such a representation. In many \nresources, you can usually see a club logo in   order to represent the internet. But in fact, \nthe internet is the spec structure, you say,   formed by a combination of all these networks \nand this structure in the middle. Okay,   this is very crucial guys. What I'm trying to \nsay is, when you only see such a representation,   you should think that there are millions \nof ladders that are connected to it,   even if these lands don't appear individual, \nokay. And the internet is a huge system   that includes all lands in the world. \nSo I hope that you understand better   reason have to bookish definition of the \ninternet, the internet is the network of networks.   Wonderful. And you can think of this attractor \nis the heart of the internet. For example,   when we connect this land, to the heart of the \ninternet, with this cable, this LAN will be   included in the internet, and it can communicate \nother devices that are connected to the internet,   you catch the idea. So far we have learned what \nthe internet is and how important routers are.   But what exactly does connecting to the internet \nlook like from a computer's perspective? And   we are going to discuss this question in \nthe next lesson. See you guys soon. Bye.   Now, we are going to discuss the meaning \nof connecting to the internet from the   computer's perspective. And I believe that it \nis very important to understand this event,   assume that we are in a home instead of \nan office and we have only one computer.   Therefore, to be able to connect to the internet. \nWhat we only need is a home router, isn't it,   there is no need for a switch. Since we don't \nhave other devices to connect to each other in   this home. Wherever it by the way, if you want, we \ncould use a router device instead of a home router   device. Because if you are aware, we want to use \nonly the router feature of the home router. We   don't need to use the switch feature of the home \nrouter right because there is only one computer   in the environment. I believe currently you know \nwhich device actually does what this should be   logical to you. Therefore, I will assume that \nyou know what basic networking devices are doing   from now on. And so far, you have learned \nthat the connection situation of the internet   is determined by whether related computer can \nsend a packet to the internet or not. And now,   I will try to make this situation more \nmeaningful to you. You are watching this video   on the udemy.com website. Right? I mean, \nlet's say you are turning on your computer   and entering udemy.com on your favorite web \nbrowser. Then you click on the video you are   watching right now or any video you want to watch. \nAnd as soon as you click on one of these videos,   your computer creates a packet and says this \npacket to udemy.com over the internet. The   packet firstly is sent to home router. And then \nthe home router says the packet is To udemy.com   over the Internet, and we can think of this green \npacket as your request message to use the.com   request message gives information to udemy.com \nabout, you want to watch the related video, okay,   this is very crucial. And after udemy.com receives \nyour request message about watching a specific   video, it's naturally realizes that you want \nto watch every year hands you the muscles, the   related video to you over the internet. And there \nwe go. These red Packers represent the pieces of   the video that you may sell to you. In other \nwords, the video you are watching right now,   by the way, there is a very important thing \nabout this process. Let me explain. While you   are watching any video on Udemy Udemy sells it \nto you piece by piece. And we call this process   streaming. I think you have heard of this concept \nbefore. And with the help of streaming technology   you can most videos uninterruptedly are without \nany problem. And to be able to solve this piece   by piece sunning process better. Now, I have \nopened a random video on udemy.com you can see   that the video is being sent to my computer from \nudemy.com piece by piece. Thanks to the ability   to send videos piece by piece, we can most video \nwithout requirement for all the video to reach our   computer. For example, imagine you want to watch a \none hour video and assume that your internet speed   is so slow. If you couldn't watch this video, \nbefore the whole video reached your computer,   it will be very bad for you, right? Fortunately, \nthe process doesn't work like that. Okay.   And in addition, this transmission time \nvaries depending on the speed of our internet.   The first or our internet speed is, the sooner the \nvideo will reach our computer. It's that simple.   I hope in this way you have a better \nunderstanding of what these red packets are great   is a result connecting to the internet refers to \nyou can send some packets to the Internet, and you   can receive some packets from the internet. And \nhere, the water or home router in this situation   plays a very important role. The home router gives \nthe packets it receives from the computer to the   Internet, and gives the packets it receives \nfrom the internet to the computer. In summary,   packet transmission is the basis of connecting \nto the internet or communicating with a computer   on the other side of the world. Meanwhile, when we \nenter udemy.com, we communicate with very powerful   computers that actually belong to the udemy.com. \nAnd we call these special computers, server   servers do not differ fundamentally from normal \ncomputers. However, since the servers will   exchange packets with 1000s of normal computers at \nthe same time, servers must be much more powerful   computers in terms of hardware compared to normal \ncomputers. Because as you know, too many people   access udemy.com at the same time. I mean, too \nmany people access servers of udemy.com at the   same time. And at this moment, let me tell you \nwhat I mean, when I say servers after you demand,   if you remember, we talked about the importance \nof the single point of failure and load balancing   before. And this is true for servers, a few \nDemeter, there is not a single Udemy server in   the world. Udemy has a lot of servers distributed \naround different parts of the world, the location   of one of these servers is the best for you and \nyou communicate with this best suited server. It's   that simple is the result, when you want to enter \nudemy.com you are actually communicating with one   of the suitable Udemy servers for you. So while \nsome of you communicate with the same server,   some of you will communicate with a different \nserver. But at the end of the day, you will all   get the same content, therefore takes the \ndistributed servers Udemy prevents single point   of failure and provide load balancing. Please \nthink about it lol. Okay. By the way, of course,   there are many details behind the transmission \nof packets. But you can think of it in this way   is the simplest logic and That's all I need \nto say in this lesson. See you guys soon. Bye.   In this lesson, we will shortly talk about \nthe white area network or briefly van,   which is a very important type of network for the \ninternet in a simple manner, you can think of van   is a network consisting of a combination \nof different plants. For example, with the   combination of these two lands, we can create \na van, or combination of this land, this land,   and this lesson, we can create another van. Okay. \nAnd in order to understand better the logical van,   we can talk about the company example. Let's \nsay we have a growing company, and reopened some   offices in different parts of the world. And we \nwant these offices to be in the same network, even   if they are far apart. And this is where the wide \narea network comes into play. By using van, we   can create a special network for our requirements. \nLet's say this is one of our land. And this is our   another land. And they are located in different \nparts of the world. And we want to create a van   for our company by using these two lands. But \nthe question is, how do we do that? Let's see.   Let's say our boss wants us to establish a \nspecial network for these lands. I mean, he wants   the computers in these two different offices to \nwork as if they are in the same environment. So   our guy is van, if we create a van, these lads can \ncommunicate as if they're in the same environment.   But there's an important point to \nconsider here. Thanks to the internet,   we can already enable these last two communicate \nright? If you know the internet stands for the   network of networks. This means that the internet \nitself represents connecting millions of flats   together. Hence, if these last are already \nconnected to the internet, computers in land one   and computers in land two can already communicate \nover the internet. This is obvious, sir,   the question is if these offices can already \ncommunicate with each other over the internet,   why we need another special network is a van. \nPlease be careful communication over the internet   directly. And communication over a special van \nbelongs to a company is a whole different tank.   So I want you to think about that question \nfor a short time and try to answer it.   If you have noticed, the internet is \na public network. I mean, the internet   has no owner and it belongs to everyone. Any \nperson can connect to the internet whenever   and wherever he wants. For this reason, it is \nobvious that this public and huge network can have   security related problems in information transfer \nbetween different locations. You know, hackers   are everywhere, and they are in \nthis public and huge network.   And to be able to answer the question I just asked \nbetter, I want to give you a very good example.   Let's say this computer wants to send an important \nfile related to the company to this computer.   And after the file is sent to this computer, there \nwill be no problem. Because this transmission   process took place within this land. This \nland is a private network for this office,   an outsider cannot read access this land without \nyour permission. This is very important. Hence,   file transmission operation in this land is \na secure operation. in general. Everything is   good so far. But what will happen if this file \nwas sent to the other office over the internet.   Let's see. Now the scenario is the same again, \nwe need to send a file related to the company   but this time, we must send this file to the \nother office of the company. As we can see   the file persists through the public network, \nisn't it? And this is where the problems appear.   Just think about it. This part of the internet \nis an absolute public network. This means that   if you sell the file over the internet like \nthat, there is no guarantee that no one from   the outside sight can't see this file or worst, \nno one from the outside can change this file.   As I said before, hackers are everywhere and the \npossibility of these issues are generally not low.   Hence, it is important to remember that there is a \npossibility for a problem when you send this file   about the company over the internet directly, \nespecially, if it is a very important file   about the company, it is very vital to be careful, \nand a special man for the company is a solution   to such problems. In general, setting up a van \nis a costly and not easy task. But fortunately,   there are various methods of setting up a van. \nAnd now, we will only talk about the most popular   and cost effective van methods and this method is \nvan by using VPN. I am sure that you have heard of   VPN before. It stands for virtual private network. \nAnd people usually use VPN to access restricted   websites, because we pn ensures our anonymity, \nand it encrypts our data before sending the packet   Hance. This gives us high security in general. \nAnd while creating grants by using VPN technology,   we take advantage of these features of VPN. \nBut the most important feature you should know   about VPN is the tunneling. This feature of VPN \nprovides privacy and anonymity and security to   us by creating a special network connection over a \npublic network. This is really, really important.   I want to repeat this again. VPN tunnel link \nprovides privacy, anonymity and Security Trust   by creating a special network connection over \na public network. However, frankly speaking,   a physical tunnel isn't created here. This \nis very crucial. tunneling technology makes   the packet acts as if it is going through a \nphysical tunnel. But I won't repeat it. Again,   this is not a physical tunnel. This tunnel visual \njust represents the high security connection   between land one and lanter. You can think of \nit in this way. This tunnel visual just stands   for the high security for the connection \nbetween these routers. It's that simple.   By the way, of course, the packet will pass \nthrough many routers on the internet in   order to reach its destination, just as you have \nlearned before. However, since VPN uses tunneling,   it will be almost impossible to interfere \nwith this packet from the outside. Great.   I hope that you get the tunneling conceptually, \nbut I want to take a closer look at it. So first,   we start our file to the right. And there we go. \nAnd at this moment, there will be some changes   on the packet. But before doing these changes, \nfirst of all, you should know that VPN tunneling   is set up between these routers, this is very \ncrucial. And we call this site to site VPN.   This method is very popular while creating a van \nbetween offices and take the tunneling our file   safe reaches lanter. You know, but the question \nis, if tunneling is not a physical tunnel,   as shown in the picture, what exactly is it? Let's \nsee, I will use an analogy. To explain this. Let's   say you need to send a letter from land one to \nlanter. So, you should give the letter you wrote   to a postman, right, the postman can take this \nletter to its destination. And suppose you are   not putting this letter in an envelope. This \nmeans that the postman can read the letter if   he wants. This is obvious, you can think of the \npostman in this example, is the public Internet.   On the other hand, if you had put this letter \nin an envelope first and gave it to the postman   in this way, the postman wouldn't be able to \nread it. This is obvious. Hence, the process   of putting the letter in an envelope represents \nthe tunneling itself. So in the real scenario,   we had to put this yellow packet into another \npacket. And there we go. Assume that the yellow   packet is in the red packet is just like putting \nglitter in an envelope. That's the whole idea   about tunneling wanderful. And in this moment, \nI want to ask you a question. And my question   is that is this packet, really in safe right \nnow? I mean, kept the postman open the envelope   and find out the information in it. If he really \nwants to just think about it. He got the point   right. Even though We have increased the security \nof the packet by applying tunneling, there are   still some problems. And this is where encryption \ncomes into play. Suppose that you encrypt your   letter in a way that only people working in \nyour company can understand. In this case,   even if the postman opens the envelope, he cannot \nobtain the information, because he will see none   understandable data, he will not understand the \nencrypted information. So, what we have to do is   very simple, right, we must encrypt the original \npacket before putting it into another packet.   So, let me back one step on Dynamesh. And for \nthis scenario, we encrypt the yellow packet   before putting it in the red packet. And then we \nput this encrypted packet into the red packet.   Now, finally, this packet is sent to them to \nover the internet safely. And there we go.   It's that simple guys. We encrypted the origin \nof packets and put it in another packet. Thus,   we maximized the security of the pact, \nokay. The term of tunneling comes from here,   because packet is safe is if it was moving in \nyour own private tunnel. I hope that I made this   concept understandable to you. And at this moment, \nthe writer needs to get the original packet.   And to be able to do this router first eliminates \nthe outside packed right and then it needs to   decrypt the encrypted packet so that it cannot \nbe in the original packet. And after the router   gets the original packet, it looks inside the \npacket and loves his destination and says the   packet to his destination. And there we go is the \nresult with the help of the van. By using VPN,   we can securely search company related information \nfrom one LAN to another. But never forget that   there is no such thing as 100% security. This \nmeans there may be always a security vulnerability   for every system. However, currently, Van \nnetworks built by using VPN technology   are quite satisfactory, in terms of \nboth budget and sacred. Okay. I believe   everything is good so far. But some of you curious \ncan think about equation, you probably think like,   I constantly use the internet in daily life. I \nsent mail to my friends, I use e commerce website,   and I do all of these over the internet. \nSo since the internet is a public network,   are all these operations insecure? The \nanswer is both Yes. And now, let me explain.   Assume that you want to make an operation on \namazon.com. And let's say you had to enter   some information about your credit card. While \npurchasing a product says this information will   be sent as a packet over the Internet to one \nof the servers of amazon.com. We absolutely   don't want anyone from the outside to see the \ninformation about our credit card is a solution   to this. And add to add encryption method is used \nbetween our computer and the destination server.   And since the packet is encrypted, nobody from \nthe outside can see the information about our   credit cards except the server of amazon.com. \nThis is the main logic behind the answer and   encryption. All of the endpoints can decrypt \nthe packet and obtain to original data. Okay.   However, this kind of encryption was not used \nin the past. And this situation made it easy for   hackers. Imagine that the information about your \ncredit card was directly obtained by a hacker in   pure text. This is terrible, right? But text to \nadd to add encryption, we eliminate this problem.   And finally, I'm going to ask you a question. And \nthen I'm going to finish the lesson. Now, you know   what when is right, in summary van repossessed the \nnetworks we create by combining different plans   in this case. My question is, what is the largest \nwide area network in the world? The answer comes   to your mind rapidly isn't it? The internet itself \nis the largest wide area network in the world.   However, I want to remind you again, please note \nthat a company's van created with VPN is different   from the internet. While one of these vans is \ncompletely special to the company. The internet is   owned by everyone in the world. And yeah, that's \nall I will say about Ron. See you guys soon.   We have learned a lot of information about \nnetwork devices until now. And in this lesson,   we will look at a few more cases, by \nusing these devices. Let's say we have two   offices belongs to the same company. And suppose \nthat there are 100 meters between these offices.   If you are aware, this distance is very short. In \nthis case, what I'm wondering is whether or not   we can connect switch one and switch two directly \nto each other to create a LAN. And the answer is,   we can definitely do this because as you know \nthat we use switches to create a class. Therefore,   we can create a LAN by connecting these \nswitches to each other, even if they are   not in the same environment. But please note that \nthe distance is very short between these offices.   If this distance, were not too short, it is \nimpossible to connect these switches and create   a LAN. Meanwhile, these types of lands can be \ncalled campus Area Network, or briefly can since   these types of networks are generally used on \nuniversity campuses, okay. On the other hand, you   know that we can also connect these two offices \nby using van with VPN. But please note that   when our LAN or different kinds of network types, \nthis is important, and you can see the packet sent   with tunneling in the animation. And there we go. \nYep, I believe so far, everything is good. But I   want to ask you a question. Which one do you think \nis more secure? When which VPN or LAN created by   connecting villages directly? Please think about \nthat for a short time and try to answer it.   The answer is source. Simple, isn't it? a LAN \nis always more secure than a van. Because in the   communication within the land, the packet never \npasses over the internet, the packet always moves   on our own cable. On the other hand, even \nif the packet is protected in the van,   the packet still persists over the internet. \nAnd as you know, there is never such a thing as   100% security, even if the packet is protected \nwith tunnel link and encryption. So to summarize,   both of these methods are secure. But \nLAN is more secure. This is obvious.   However, there is a condition that event is \nalmost a secure SLR and we call private van   for this type of fan. By the way, we haven't \ntalked about this van type before. I mean,   this is different from manmad VPN, because the \nline between offices is dedicated for the company,   you request this line from the ISP and give \na special money for this line does. The ISP   gives you a private line that only your company \ncan use? We call the van created in this way,   his private van. Okay. And please remember that \nwe were using public internet network environment   VPN. And that's why we also call them each VPN \nis public van This is very crucial. In addition,   even if private van sounds great, it the first \nglance, it can be quite costly. For this reason,   it makes sense for an average company to prefer \na public van instead of private van, you know,   public van provides us security that we definitely \ncannot underestimate right, wonderful. Now,   I want you to pay attention to one point. Some of \nyou may have already noticed this, but it will be   good to mention. In any case, we will switch \ndevices to create a LAN while we use routers   to create a van. This is very vital. I want to \nrepeat this again, we use switches to create a LAN   while we use Rogers to create a van. This means \nwe cannot create a van by using service devices.   Because a van fundamentally represents connection \nof different plans with the help of Van different   glass can act as if they are in the same \nenvironment. And you know that if you want   to connect different plants, we definitely need \na router for this task. He's got the point.   And now I want to talk a little bit about ratar o \nuntil now. I have always explained the router is   an internet related device. However, it isn't the \nmain task of the router is to connect different   networks. That said, you should realize that these \nnetworks may be in different parts of the world,   or maybe in the same office, it really doesn't \nmatter. And in this slide, you can see that two   different plants in the same office are connected \nto each other thanks to the router device.   Suppose that one of these networks is \nrelated to the marketing unit of the company,   and the other relate to the software unit. \nAnd as you know, if we want different   networks to communicate with each other, \nwe should use erasure in the animation,   you can see that land one Outland, through \ncommunicate through Roger, and there we go.   Great. And here, I want to give you additional \ninformation about Roger, I want you to focus on   the cables of the router. If you are aware, each \ncable is connected to a different network. I mean,   one of the cables is connected to LAN one, one of \nthe cables is connected to and to and one of the   cables is connected to the internet. This is the \ncase for the router. The router connects different   networks, you know, for this reason, each cable \nconnected to a port on the router represents a   different network. Okay. By the way, you may have \nwondered why different networks are needed within   the same office. As a matter of fact, this \nis a common situation in real life. I mean,   you may want different units in the office to \nbe in different networks. This might be absurd   for an office suite for computers. However, \nimagine an office with 50 computers in it,   dividing these computers into units increases \nhierarchy and order never forgot. That   is you can see the basic principles are the same \neverywhere. By using these basic principles,   we can enable devices in different parts of the \nworld to communicate. And we can enable devices   in the same office to communicate, both of \nthem represent the same task. I think you   understand this concept very well. And that's all \nI want to say in this lesson. See you guys soon.   In one of our previous lessons, I told you, we \npurchased this cable that came to our home from   ISP, but I haven't mentioned what exactly ISP \nis. And in this lesson, we are going to discuss   what is the ISP and why it is so important. \nThe internet service provider or briefly ISP   is responsible for the transmission of packets \nfrom one location to another. If you remember,   we have learned that there are a lot of routers \nin the heart of the internet and talking about   this structure. And you can think of the ISP as \nthe mechanism that controls all these routers   in this structure. For example, there are \nactually many routers in this globalized.   Similarly, there are many routers in this region \nlast year. But to simplify the concept, I didn't   visually show routers within the ISP s. However, \nI want you to imagine that the routers distributed   around the world are controlled by these ISVs \nThis is very crucial. Think of it as of each ISP   controls specific routers, and packets are sent \nfrom one location to another location over these   routers. We previously talked about how the packet \ntravels from one point to another era others   understanding this situation is the first \ncondition to understand the ISP. What I am   trying to say is certainly SPS are responsible \nfor certain routers, I want you to imagine that   every ISP you see in this picture is responsible \nfor certain routers, okay, but I am removing them   from the visual for the simplicity of the \nconcept. In addition, the ISP model you see here   is a simplified model. But even if the model \nis simple, it is enough to understand the most   important parts of the concept. Let's start with \nbasic definition of the ISP. ISP s represent   companies that serve us so that we can connect \nto the internet. And of course, they charge a   certain fee for this service. You cannot connect \nto the internet without an ISP. Think of ISP is   the structure that allows you to connect to the \ninternet and ISP is not a single structure. There   are hundreds of 1000s of ISVs in the world, and \nall these isbs come together to form structure   you see individual, there is few ISP individual I \nknow that. But I can say that there are hundreds   of 1000s of ISP s in real life. The most common \nISP type in default is local ISP. And now, I want   to start with it. The first step of connecting \nto the internet is to communicate with the local   ISP. And local ISPs are generally responsible \nfor small area communications, for example, the   communications of two different plants in the same \nneighborhood, or communication of less located in   neighborhoods close to each other. Let's say we \nlive in the USA, and these two homes are located   in the same neighborhood. If this computer wants \nto communicate with this computer, the connection   is provided directly over this local ISP. This \nis obvious, you can see this on the animation.   The packet passes through different routers \nat local ISP and reaches its destination.   But in general, since the local ISP is \nresponsible for the communication of small   areas, the packet can also pass through all the \none router before reaching its destination. You   can think of this local ISP is the ISP that \nonly connects lands within a neighborhood.   Of course, a local ISP can connect different \nneighborhoods. But in this scenario,   let's say it doesn't, therefore, one router can \nbe enough to connect them, you got the point. And   in this visual, you can see an example of a \nsmall local ISP office. And we call these offices   Point of Presence or briefly pop. In fact, effect \nrouters distributed over the internet are included   in these paths. And in this fab. In other words, \nin this office, routers are on the left side. In   addition, you have probably noticed that there are \nother devices than routers, because sometimes we   must do different configurations with different \ndevices. Hence, EPA must save routers, switches,   servers, and so on. But the device we use to \nconnect different networks to each other is the   right you know, for this reason, we will only \nfocus on routers. And in our previous lessons,   Reuters on the internet visual, were actually \nrepresenting paths, separate over divulge.   And in order to explain this better, I want to \ntalk on a different image. But in this image,   I want to think of different houses and offices \nconnected to local SB two and local SB three. I   mean, you both talk about the thoughts, you got \nthe point. And there we go. As you can see, a   home and small office connect to a pop over local \nSB saw this pop is the first point to be able to   connect to the internet for this home. And this \noffice. This should be clear to you. By the way,   if you are aware, locally, SB two has four paths, \nyou might think that takes to these four paths.   Locally SB two connects different neighborhoods. \nAnd in this way, lands in different neighborhoods   can communicate over local SB two effectively. And \nfrom here, we can draw the following conclusion.   Some local asbs can have more than one path. \nHowever, some localized space can only have   one path. This depends on the size of the \nlocalized sphere. For example, if a local ISP   connects four different neighborhoods, it may \nhave four different paths. But if a local ISP   connects all the one neighborhood, it has all the \nvamp up, you catch the idea. And if you want to do   more detailed studies on this topic, you will see \nmany resources on the internet. with raw trackers,   you should be aware that these icons actually \nrepresent water within the pop. There are many   pops distributed all of our developers and \nrouters are in these paths. It's that simple.   At this moment, I want you to imagine that there \nare hundreds of 1000s of local SPS in the world.   And these local SPS Connect regionally space \nthat are larger than this means that different   localized space communicate over regionalized \nspace. For example, local SP to communicate   with local SP three over the regional SP one. \nAs a matter of fact, you can think of local asbs   Connect neighborhoods and regional SPS \nConnect cities in a country. It's that simple.   I want to repeat this again, you can think of \nlocalized space, connect neighborhoods or small   areas and regionally space Connect cities. In a \ncountry, okay. Meanwhile, there is one regional   SP in this simplified model we use. But in real \nlife, a country can have many regional airspace   and all local SPS and regional SPS, combined \nin order to create a network of a country.   In summary, the first step to connecting to the \ninternet is local ISP. And this line represents   the line we purchased from the local ISP, right? \nevery home or office must purchase such a line   from the relevant ISP to connect to the internet. \nAnd if you examine your home router carefully,   you can see the cable coming from your \nISP. Wonderful. Now, let's suppose that   this computer and this computer want to \ncommunicate with each other. By the way,   these two homes are located in the USA, but \nthey are in different cities. As a result,   they are connected to different local ISP. \nSo this is our base. so in this situation,   how will this local SV communicate with this \nlocal ISP, let's say in fact, this is where   the regional SB one comes into play. In general, \nthe regional SP is engaged in the communication of   devices in the same countries, but in different \ncities. If you look carefully at the animation,   local asbs communicate over the region \nlaceby is obvious, right? And there we go.   And at this moment, some of you may be wondering \nwhy there is no direct link from local SB two to   local SB three, this is not expected question. \nJust think about it. If we connect, localize   these directly, the hierarchy is broken. I mean, \nyou see very few localized these in the scenario,   but in real life, there can be middleclass peace, \neven in the same city. And if we connect them all   together, complexity will definitely occur. And \nwe don't want to increase the complexity of this   system, it is already quite complex, isn't it. \nAnd that's why we use a central hierarchical   ISP structure is you see individual with the \nminimum number of connections between ISP s,   we ensure that all ISP is communicate with each \nother. It's that simple. So far, we have talked   about the local ISP, and regionalised. Also, \nthe computers that communicate with each other,   were always in the USA. But what if computers in \ndifferent countries want to communicate with each   other. And this is where the global SP comes into \nplay, you may think that the global ISP connects   devices in different countries in general, is, you \nknow, there is an ocean between the USA and China.   So if a device in the USA, and a device in China \nwants to communicate, it must be a global ISP that   provides this connection, you cannot connect these \ntwo devices with only local ISP, and regional ISP.   And as you can see in the image, there are \nmultiple global asbs. And these globalists,   these are the part of the hierarchy. And by using \nthem, these two computers can communicate with   each other. Let's assume that this computer wants \nto communicate with this computer. In this case,   the packet will first go to the local ISP, \nPeter, you know, and then go to the regional   ISP one. And the packet has two options at this \nmoment, this path or this path. In other words,   globally, SB one or global SB three, I hope you \nunderstand that this selection is determined   by the routers in the regional SP one, each router \nmakes a choice. And as a result of these choices,   the Reuters path is determined. Let's say the \npacket will be forwarded to global SB one. And   there we go. By the way, another packet that \nwill pass through regionalize v one may go to   the global SB three next time. Who knows \nyou catch the idea. Anyway, afterwards,   let's say that the packet will be sent from \nglobal SB one to global SB two. And there we go.   And at this stage, the packets can be sent \nto local ISP six, or directly to the regional   SB two or global SB three. Either way, it will \nreach its destination. What I'm trying to say is   the packet can follow different paths. And I \nwon't show you some of these paths. For example,   from global SB two to local SB six, regional \nSB two, local SB seven and this nation or   from global SB two to three regionally SB two, \nlocally SB seven and this nation or from globally   SB two To globally SB three, regional SB two, \nlocal SB seven and this nation again all of them   are suitable paths. You should \nalso have noticed a situation here.   If the destination of the packet was this harm, \nthe packet could reach his destination directly   over local SB six without going over regionalist \nfeature. This means that some localized space   can connect with global ad space. Without a \nregional ISP. This is very important is enough,   local ad space represents small companies. And \nin some cases, these small companies may want a   direct connection with a global ASV to provide \na faster internet experience to its customers.   Actually, there are two ways for this kind of \nconnection. in general. If a local ISP connects   directly with a global ISP, its location \ncan be very suitable for this purpose.   I mean, related global ISP can already have an \ninfrastructure on this location. However, if the   related global ISP doesn't have an infrastructure \nin this location, a lot of extra money must be   paid for disconnection by the local ASB company \nto the global ASB company, you catch the idea.   And for this packet on the global ASB through, \nlet's say it will go to the regional ISP instead   of local SB six or global SB three. Okay, from \nhere, packet will go to the local SB seven. And   there we go. As you can see, locally, SB seven \nis connected directly to the destination LAN.   Therefore, locally, SB seven knows that where it \nwill send the packets. And finally, to home rats   receiving the packet sends it to the destination \ncomputer Wallah. As a result, you have learned how   computers in two different regions of the world \ncommunicate over the internet. You also learnt   the relationship between the internet routers \nand ISP with each other. And in the next lesson,   we are going to cover two more scenarios related \nto the ISP concept. See you guys in a moment.   Let's say we are in Belgium. This is our home. \nAnd we want to connect to enable establish website   called ABC x.com. The owners of the website have \nlimited financial power. For this reason, they   have all the answer we're on the USA. So to be \nable to reach ABC x.com our request message must   pass over at least one global ASP This is obvious, \nyou can see the whole process on the animation.   And after the server of the ABC x.com receives \nthe request message in exchange for it, ABC x.com   creates a response message. This response message \ncontains information about the web page we want   to enter. It includes images, videos, HTML file, \nand everything related to the web page. Meanwhile,   if you don't know what an HTML file is, you can \nthink of it as the skeleton of a web page in a   simplest manner, and after generating the response \nmessage, the server must send it to us. However,   the path preferred by the response message \nwill be different from the path preferred   by the request message. Please pay attention to \nthis on the animation. There is no way to know   the exact path of a message beforehand. Since \nrouters can make different choices each time   I'm in the park for a message is always determined \non the way. Never forget that. And as soon as we   received the response message, the website appears \nin our web browser. In summary, then you want   to enter a website, you first sent a request \nmessage to the server off website. And the web   server receiving your request message sends you \na response message which contains all information   about the web page you want to enter. And then \nthis message comes to you. your web browser learns   all information from this response message and \ndisplays the related web page in your web browser.   And the surprising thing is, every time you want \nto enter a website, this process happens again.   However, since this process takes place in \nmilliseconds, you don't realize that there   are complex operations in the background. And now \nlet's try to enter google.com instead of ABC x.com   and see what happens. You know, Google is quite \ndifferent from ABC x.com. Since it is a giant   company, for instance, unlike ABC x.com, Google \nhas many servers distributed all around the world.   And with this distributed server structure, Google \nprovides a much more efficient and fast service   to its customers. And let's say one of these \nservers is not far from our heart. Therefore,   when you want to enter google.com, or when \nyou want to get any service from Google,   we will probably connect to this server, which is \nclose to us, okay? For this reason, the process   failed way much faster. In fact, this is the \nmain reason why big companies put many servers   in different locations around the world. \nThey want customers to communicate with them   in the fastest and most efficient way. And the \ndistributed server structure is a great solution   for such a desire. I believe you catch the idea. \nSo then we want to request a service from Google,   our request message will go to this server \nclusters. You'll know that how the packet reaches   the related server with the help of ISP. Yes. And \nyou know that what will happen after this stage,   Google sends us a response message related \nto the servers we request. However,   the time for Google to communicate with the \ncustomers is sometimes not satisfactory for   Google. And Google wants to increase this \na bit in general. Fortunately, Google has a   very good solution for this kind of issue called \npeering. But what exactly is peering? Let's see,   peering is the technique, which Google \nestablishes a direct connection with an   ISP to provide faster access to eat servers. As \nyou can see on the animation, Google connects   directly with the local asbs. Thus, when we \nwant to get a service from Google, you will be   able to communicate directly with Google servers \nwithout using ISP infrastructures. In this way,   Google can communicate with the customers much \nmore effectively and quickly. At this moment,   everything is good. But what about security, \nsince the number of public pop that packets pass   through decreases, takes the period, security \nincrease a saw much I'm in the packet goes   directly to Google via local ISP. In other words, \nthe packet does not use public ISP infrastructures   to communicate with Google. Remember that security \nis very important to large companies. And it is   obvious that this direct connection decreases \nthe possibility to be obtained for the package   from the outside. Wonderful. And last, but \nnot least, I want to give you an example   is you know, YouTube is owned by Google. So \nwhen you want to watch a video on YouTube,   you are actually using Google's distributed \nservers around the world. And you are all   aware that YouTube works very efficiently by you \nwant to watch a video on YouTube, you can watch   it very well, you will be interrupted whatsoever. \nThe main reason for this is the distributed server   structure and the appearing infrastructure of \nGoogle. On the other hand, you may sometimes see   freezes and interruptions, while watching videos \non Udemy. Because Udemy infrastructure is not   as strong as Google in general. Of course, Udemy \nalso uses a distributed server structure. But this   number is probably not as many as Google This is \nobvious. In addition, Udemy doesn't use peering.   And you know that peering is a very efficient \ntechnology, especially it increases the streaming   quality and speed a lot. But I can say that Udemy \ndid a significantly Good job overall, because   serving millions of people at the same time is \na really challenging engineering problem. Okay.   In summary, peering is a very effective structure \nis used by giant companies like Google, Amazon,   and so on. He's got the point. And finally, I \nwant to give you some general information about   ISP is you know, global ASB are responsible for \nthe international communication. I can't say that,   although definitely not as many as the regional \nISP. There are a few global ISP in the world. And   you can guess that the technical reasons \nfor not having only a single global ISP   in the world. We have talked about similar \nthings before but in addition to these reasons,   like load balancing And efficiency. There \nare also some financial reasons for this.   I mean, setting up a global ASB company is a \nvery costly business at the beginning, but it   makes its honor a lot of money. You know what \nI'm saying, right? If you have a lot of money,   establishing a global ASB company is a good \nchoice, it will probably make you smile with time.   By the way, we also call the internet backbone to \nthe network that global ASB set up with each other   familiarity to internet backbone term can be \nuseful for you in the future. In addition,   there are structures called internet exchange \npoints, in order for the internet backbone   to work synchronously for global a space to \ncommunicate with each other more efficiently.   And we brief the call these structures \nI XP, or I x never forgot that.   And the last thing I want to mention is that \nyou don't have to connect to a local ISP.   In order to connect to the internet, you \ncan directly connect to a regional ISP,   or global ASB if these ISP have a service for \nyour location. This means that you can learn   which ISP is our serving value live and make \nyour choice. According to this information, it is   absolutely your decision to choose the ISP service \nyou want. Okay? For example, let's say this is   our home and we connect to the internet via local \nASB. However, if you request, we can also connect   directly to the internet via regional SP one, \nthis is possible. What I am trying to say is   if you want to get your ISP service from a certain \ncompany, and if this company doesn't serve your   location, you can contact the company and talk \nabout what you can do. If you give the required   money to the ISP company, most regional ISP and \nglobal ISP can provide you the service you want   that set. But for normal users, this is where \nunnecessary normal users only need to choose one   of two ISP services in their location and benefit \nfrom it. On the other hand, if you want to set up   a local ISP company, such a move may make sense. \nWonderful. And we talked about the ISP in general,   I think you got a lot of good information. \nBut if you want you can do more research   about the ISP on the internet. However, \nthat's all I have to say in this course."
    },
    {
        "video_id": "7_LPdttKXPc",
        "title": "How the Internet Works in 5 Minutes",
        "url": "https://www.youtube.com/watch?v=7_LPdttKXPc",
        "duration": 289,
        "transcript": "so how does the internet work most of us know how to use the internet without actually understanding how it works sort of like electricity in your home you use it every day but may not understand the mechanics behind it and if the electric grid is difficult to understand then the internet must be impossible right wrong in the next few minutes I'll put you in the top 10 percent of people who understand how the internet actually works for security catalyst.com I'm Aaron Titus whenever most people think of the internet this is what comes to mind the internet is not a bubble Cloud even in the new age of cloud computing the whole fuzzy Cloud picture was created by people more concerned about job security than education this is the internet the internet is a wire a actually buried in the ground it might be fiber optics copper or occasionally beam to satellites or through cell phone networks but the internet is simply a wire the internet is useful because two computers connected directly to this wire can communicate a server is a special computer connected directly to the internet and web pages or files on that server's hard drive every server has a unique Internet Protocol address or IP address just like a postal address IP addresses help computers find each other but since 72.14.205.100 it doesn't exactly roll off the tongue we also give them names like google.com facebook.com or security catalyst.com so this is how it works your computer at home is not a server because it's not connected directly to the internet computers you and I use every day are called clients because they're connected indirectly to the internet through an internet service provider here we'll pretend that this is my home laptop and I'm using DSL now let's pretend that I want to visit aol.com which is coincidentally both a server and an ISP I hop onto my laptop with DSL go through my ISP onto the internet and look at AOL.com my computer connects with aol.com and I can look at its web pages now let's say that I want to send an email to Aunt Ruth and Ruth has AOL dial up from home and I've got a Gmail account I log onto gmail.com and compose a message to Aunt Ruth's email address and Ruth aol.com once I click Send gmail.com sends the email to aol.com the next day Aunt Ruth dials into AOL servers and retrieves the email whenever an email picture or web page travels across the internet computers break the information into smaller pieces called packets when information reaches its destination the packets are reassembled in their original order to make a picture email web page or tweet okay so imagine you're at work sitting next to your boss and you're both surfing online your boss is doing market research and you're updating your Facebook profile you're both sending packets back and forth over the internet but what's to keep your packets from accidentally ending up on your boss's screen that could be embarrassing the solution to that problem is IP addresses and routers everything connected directly or indirectly to the internet has an IP address everything that includes your computer servers cell phones and all of the equipment in between anywhere two or more parts of the internet intersect there's a piece of equipment called a router routers direct your packets around the internet helping each packet get one step closer to its destination every time you visit a website upwards of 10 to 15 routers may help your packets find their way to and from your computer imagine each packet as a piece of candy wrapped in several layers the first layer is your computer's IP address your computer sends the packet to the first router which adds its own IP address each time the packet reaches a new router another layer is added until it reaches the server then when the server sends back information it creates packets with an identical wrapping as the packet makes its way over the internet back to your computer each router unwraps a layer to discover where to send the packet next until it reaches your computer and not your bosses and that's how the internet works in five minutes or less and you're now easily in the top 10 percent of people who understand the basics of the internet if you found this video helpful check out security catalyst.com for all kinds of ideas on how to protect your information I'm Aaron Titus"
    },
    {
        "video_id": "e9X4HiUsliE",
        "title": "What is a Website? - How Websites Work",
        "url": "https://www.youtube.com/watch?v=e9X4HiUsliE",
        "duration": 321,
        "transcript": "hello I'm Ben Wade and in this unleash You tutorial you are going to learn what websites are and how they work we'll cover domain names hosting content Management Systems in fact in this tutorial series we'll show you step by-step how to build a website using all those things together so stay tuned at the end for how to get access to that and now let's dive into what is a website so what is a website we look at them all the time but what are they well by definition a website is just a collection of documents or files that you can access through the internet and usually they look something like this now in order to be able to look at a website people use a program called a browser the most popular browsers are Chrome Firefox Internet Explorer and Safari now browser's job is to make the code into something that the user can look at and use but where the websites come from how does your browser get the information for them well the documents or files that makeup websites are stored or hosted on computers called servers the server's job is to host the information files and make them available to be sent whenever they are requested when you tell your browser to look at a website it sends a request to the server where the website is hosted through the internet the server responds by sending the information for that page back to your browser which displays it so you can see it to coordinate all of this any device that connects to the internet is given a unique address this is called an IP address IP addresses usually look something like this now for most people trying to remember an IP address isn't very easy so to help with this names that are easier to remember are used to substitute for the IP addresses these names are called domain names that way instead of trying to remember something like this all you have to remember is a name like this now domain names are set up with companies called registar and the registar job is very simple when a request is sent out for information from a domain name the registar makes sure that request is sent to the IP address of the server where that website is actually stored then the server sends the information back so the browser can display it now in order for a website to function it has to have a place where it's stored which is referred to as a server a server can be anything from a computer in someone's house to a massive collection of storage computers in a data center smaller websites don't need a lot of space and hundreds or even thousands of them can be stored on a single server this is referred to as shared hosting on the other hand huge websites that get a lot of traffic may need lots of servers working together to keep keep up Google and Facebook for example have millions of servers all working together to provide all the information requested from their site most people setting up a new website will start by renting some space on a server this space is called a Hosting account once a person has set up a domain name for their site and a Hosting account to host their website now it's time for them to actually create the website itself and remember websites themselves are just information you can access online now they can either be extremely simple like this website or they can be massively complex with millions of servers contributing to them like Google or Facebook to help build and manage websites easily many people use programs called content Management Systems content Management Systems basically manage a website the way the operating system on your computer manage your computer for you and they are nice because they allow people to build a website without actually having to build all of The Code by hand now in order for you to set up a website you mainly need three things item one you need to set up your domain name with a registar item two you need to set up a Hosting account so that your website will have a place to live and then make sure that your domain name is pointed at that server's address and item number three you need to build the website itself now this may sound daunting to you especially if this is the first time you've done any of this don't worry here's the best part and the rest of the tutorials in this collection you'll be walked step by step through tools and resources that show you how to do everything you've learned about in this tutorial so there you have it the basic nuts and bolts of how websites work all right so to wrap things up you learn what websites are and how they work the rest of the collection of tutorials is laid out step by step at unleash you so it's easy for you to navigate and you can look for links in the description or on our page if you're on our website and of course be sure to like favorite comment share this video so other people have an easier time finding it also subscribe on YouTube like us on Facebook basically follow us wherever you find us you never miss anything we put together for you all right thanks for watching and keep an eye out for more tutorials coming up"
    },
    {
        "video_id": "vzdA66d6xDs",
        "title": "What is a Website?",
        "url": "https://www.youtube.com/watch?v=vzdA66d6xDs",
        "duration": 120,
        "transcript": "People visit many different websites\nevery single day, but not everyone knows what they\nreally are. So let's talk about that. To understand what the websites are, you need first understand what a web page is. In short\nweb page is a text file with bunch of code in it it's nothing special, really. Web pages\nare written with following three languages: HTML, CSS and JavaScript. To\nmake their functions more understandable I'll use an analogy with the a... erm...  T-rex, yeah that will do. HTML is used\nto describe the structure of the web page, to create the skeleton\nfor our your T-rex what parts should the page be made of and in\nwhich order should be placed, this is all described with HTML. CSS is used for design purposes, make our T-rex look more realistic.\nPositioning, spaces between components, fonts and colors of the webpage is described with CSS. And finally JavaScript. It is used to make that boring static\nweb page more dynamic, to add extra functionality to it. Search box's\nauto complete function, or profile preview function, are made\npossible with JavaScript. The above was about the structure of a web page. And a website is basically a folder with a bunch of web pages and media files in it, like music, pictures, cat videos. Yep, it is that simple, a bunch of files in a folder, nothing more. “But wait a second”, you might say, “I do not see any code, when I visit my Facebook page for example. I see a logo, a menu bar, relationship posts and statuses I do not care about”. Well, that's all thanks to your browser.\nBrowser is a program that takes all that code, analyzes it, and draws a web page onto your screen. By the way if you are interested what a code of a web page looks like,  here are key combinations to view the source code on different browsers. In the next video I am going to explain where are the websites stored and how does your computer access them."
    },
    {
        "video_id": "ydcepRmRKFg",
        "title": "What is a Website?",
        "url": "https://www.youtube.com/watch?v=ydcepRmRKFg",
        "duration": 132,
        "transcript": "what is a website a website is a virtual location on the web web stands for world wide web a typical website consists of several web pages and data files we access websites web pages and data files through a browser chrome firefox safari opera and explorer are examples of browsers each website has its own website address or url url stands for uniform resource locator if you type that website address at the top of your browser it will take you to the home page of the target website the word site in this context means the same as website every url starts with http http stands for hypertext transfer protocol http allows for the retrieval of linked resources that exist in the world wide web we create websites using html code which browsers then decode into something we can understand and enjoy we can see images on websites thanks to the browser that decodes the html so what's the difference between a website and a web page the home page is the startup or default page of a website in other words it is the introductory page of a website from the home page the visitor can navigate to other parts of the website the home page has hyperlinks to other web pages within the website have many possible functions there are for example commercial and personal websites there are also government police school newspaper music shopping health and non-profit organization sites video streaming sites such as netflix hulu and prime video are very popular worldwide all the websites that we have access to make up the world wide web thank you for watching this brief video on websites"
    },
    {
        "video_id": "1mXrxc_sv1o",
        "title": "Front-end vs back-end: What&#39;s the difference?",
        "url": "https://www.youtube.com/watch?v=1mXrxc_sv1o",
        "duration": 75,
        "transcript": "the terms front end and back end are thrown around all the time in web development but what exactly do they mean let's think of it this way imagine you go into a computer store they probably have decorated the store nicely to make you feel comfortable and put a few computers out front for you to see however when you actually request to buy a computer they will go to the back and retrieve a new computer for you to take home similarly in web apps the front end is the part of the app the user will see it is nicely designed and easy to interact with the back end is where all of the data is stored and requests are processed like a warehouse or a storeroom the user can make requests from the front end to do things in the back end like place an order for a computer however they can't go in there themselves let's say we're building a website for a restaurant this site contains the restaurant's hours of operations its menu and directions to the restaurant when a user visits this site the html and css files for the site will be retrieved from the back end and displayed in the user's browser what the user can now see the rendered version of these html and css files is the front end of the site"
    },
    {
        "video_id": "oGM4LI9Z9HE",
        "title": "Front End vs Back End development - Which should you learn?",
        "url": "https://www.youtube.com/watch?v=oGM4LI9Z9HE",
        "duration": 662,
        "transcript": "what's up guys the question is should you learn front-end or back-end development first I'm gonna compare front end versus back-end in five different categories and see which comes out on top if you're a developer just learning to code or you've already started and you're questioning whether you're on the right path this might be a good video for you to watch first of all my name is Aaron P I'm a full-stack developer in Silicon Valley who started as front-end but now I write both front end and back end everyday in a variety of languages if you're interested in topics like this consider subscribing because I'm gonna be releasing a lot more videos also a disclaimer a lot of what I'm gonna say in this video is my opinion but I try to bring in facts wherever possible first category getting competent when you compare front end versus back end which is easier to get to a level where you're dangerous or able to do a job but not necessarily a master yet keep in mind getting competent is one of the most important areas because if it's too difficult you have a higher chance of giving up so comparing front end versus back in let's look at front end first friend has a lot of things going for it a lot of what you do in front end is very visual so you make a change and save your file and then you automatically see it update on the screen if you don't have a background in a technical discipline that's focused on logic and rational thinking then front-end might be the natural choice for you because it lends itself more to what you see is what you get on the back end it takes time to build mental abstractions for things like databases api's cloud servers and you don't really have a visual reference to conceptualize all that you have to kind of build this muscle of abstraction over time with spaced repetition and just a lot of exposure to these kind of concepts and systems that being said if you have a background in another engineering discipline math or anything like that you might have an easier I'm picking these up personally I did not so I went with front-end first and I I'm glad I was able to get competent relatively fast doing that considering what we said at first about this point where if you get too frustrated you're more likely to quit I'm gonna give this point to front-end because for most people you're not gonna have a technical background and you're it's just going to be a faster more responsive path meaning you can see your progress very clearly when you're working on front-end so competence goes to front-end let's move on to point number two mastery so once you've gotten competent in either front end or back end you still have a long way to go before you are considered let's say a full engineer in terms of front-end you have a ton of stuff to look at everything from browser compatibility issues to the full range of tools available at your disposal and frameworks to web optimization asset optimization you could even throw UX UI design in there so it just branches out in so many different directions that's not to say back-end is any simpler you're gonna have a similar range of topics that go from scaling to database optimization DevOps pipelining cloud computing and the list goes on considering that either of these take years and years to master there's no real clear winner in terms of mastery so this one is a tie they're both hard to master point number three is getting a job fast this might be the point you care most about because you might be getting into coding to get a better job make more money and those are totally valid reasons to to get started with it in terms of getting a job fast we have to look at a few things first the job market itself and also the competition in that market the market for front end is booming particularly jobs for react and angular similar frameworks like that the thing you have going for you if you know reactor angular is they do not teach this knowledge in college because they're considered still trendy and people getting computer science degrees are learning the fundamentals and things that have stood the test of time if you manage to learn react or angular you're going to be competing on a more level playing field with other people who have had to teach themselves the same I've kind of hinted to the challenge of trying to learn back-end on your own and that is that you're gonna be basically competing with computer science graduates who have been studying mostly back-end for four years also back-end interviews are much more algorithm and data structure focused which again computer science graduates are gonna have two full classes in that topic so when you look at both the market and the competition I would definitely give the first job point to front-end one more point around languages learning front-end you just have a single stack it's always going to be some permutation of HTML CSS and JavaScript but on the back end again you could although learning a language is not impossible you're gonna have a maybe ten different languages that a back-end job could be in and if you don't know the particular one you're gonna be at a disadvantage to someone who does when you're learning either front-end or back-end you're investing a ton of time so a major consideration is are the things you're learning going to stand the test of time can you still leverage them 10 years or 20 years in the future so does front-end or back-end stand the test of time better well the reason why a lot of computer science programs folk on Java and C is because they've been around for 30 or more years back in principles languages aside the principles of back end have really stood the test of time you can still read books back from the 70s like the structuring interpretation of computer programs by ableman and Sussman and it's still a staple of modern day computing paradigms like functional programming relational databases and similar concepts are not going away so if you spend the time to learn them you're gonna continue reaping the benefits from that knowledge going forward another noteworthy point is the classic canonical languages like C often evolve into other languages so if you know see a lot of see like languages are gonna be very intuitive to you see like languages being JavaScript go and so on everything I just said about back-end is pretty much flipped in Reverse in the front-end space front-end is all trendy right now for a while there were framework Wars going on between angular react backbone view just to name a few and those have kind of tightened up a little bit now react is kind of emerging as the winner with angular in a close second the state of the front-end industry is very ephemeral with new tools popping up every day so if you do not like continuously learning and the risk of what you're learning now becoming irrelevant relatively soon you might want to stay out of the front-end space to compete stay ahead and never stop learning is kind of a challenge if you look at it in a certain way but at the same time if no one's writing react anymore in a few years I'm gonna be pretty pissed because I've spent so much time writing react that being said I don't think it's going away that soon but there is always the chance of something you learn becoming irrelevant it probably goes without saying that back-end is the winner of this point okay final point and this one is totally opinion but which one is more fun akin is pretty cool when you design a really useful API or a highly performant system but it doesn't really have the same wow factor as the front end you can't show your friends your server and impress them with it and unfortunately now we live in a design first mobile first world where the front end is more important than ever basically so if you don't have a friend and that draws you in and captures you the general public just won't really care about the underlying technology you can also use a lot of hosted backends now like Google firebase and similar to basically write only front-end code and abstract away the rest this is really good way to like bootstrap new businesses and so on my personal opinion front ends a little boring fun but you're really limiting yourself if you don't learn at least a little bit of front-end and back-end according to our points front end is the winner but the real conclusion is that it totally depends on you if you're more of an analytical mathematical engineering type person you will probably be more drawn to back-end just because those principles of logic hold true in that space and you're gonna have that deep dive into the abstractions that you're probably already familiar with on the other hand if you're more of a creative person or just someone who hasn't really touched a lot of technical subjects front end will be without a doubt easier for you to ramp up on and again not giving up at the beginning is the most important thing so I hope you guys enjoyed the video I wish you luck on your path to becoming an engineer whether it's front end back end or full stack just remember stick with it and I'll see you in the next video"
    }
]